
======= out.yul (EVM) =======

Pretty printed source:
object "contract" {
    code {
        datacopy(0, dataoffset("runtime"), datasize("runtime"))
        return(0, datasize("runtime"))
    }
    object "runtime" {
        code {
            let method_id := shr(224, calldataload(0x0))
            switch method_id
            case 0x0ac298dc {
                let calldata_offset$ := 4
                let init_calldata_offset$ := calldata_offset$
                let memory_offset$ := 0
                let return_value$ := get_owner()
                let processed_return_value$ := msize()
                let processed_return_value_init$ := processed_return_value$
                let where_to_store_head$ := processed_return_value$
                let where_to_store_head_init$ := where_to_store_head$
                switch byte(0, mload(return_value$))
                case 68 { }
                default { revert(0, 0) }
                return_value$ := add(return_value$, 1)
                mstore(where_to_store_head$, shr(96, mload(return_value$)))
                return_value$ := add(return_value$, 20)
                where_to_store_head$ := add(where_to_store_head$, 32)
                processed_return_value$ := add(processed_return_value$, 32)
                return(processed_return_value_init$, sub(processed_return_value$, processed_return_value_init$))
            }
            case 0x68aa6be9 {
                let calldata_offset$ := 4
                let init_calldata_offset$ := calldata_offset$
                let memory_offset$ := 0
                let num := memory_offset$
                mstore8(memory_offset$, 67)
                memory_offset$ := add(memory_offset$, 1)
                mstore(memory_offset$, shl(0, calldataload(calldata_offset$)))
                memory_offset$ := add(memory_offset$, 32)
                calldata_offset$ := add(calldata_offset$, 32)
                let return_value$ := abc(num)
                let processed_return_value$ := msize()
                let processed_return_value_init$ := processed_return_value$
                let where_to_store_head$ := processed_return_value$
                let where_to_store_head_init$ := where_to_store_head$
                switch byte(0, mload(return_value$))
                case 67 { }
                default { revert(0, 0) }
                return_value$ := add(return_value$, 1)
                mstore(where_to_store_head$, shr(0, mload(return_value$)))
                return_value$ := add(return_value$, 32)
                where_to_store_head$ := add(where_to_store_head$, 32)
                processed_return_value$ := add(processed_return_value$, 32)
                return(processed_return_value_init$, sub(processed_return_value$, processed_return_value_init$))
            }
            case 0x957592d6 {
                let calldata_offset$ := 4
                let init_calldata_offset$ := calldata_offset$
                let memory_offset$ := 0
                let return_value$ := test_address_storage()
                return(0, 0)
            }
            default { revert(0, 0) }
            function get_owner() -> return_value$
            {
                let offset$ := msize()
                let $storage_get$0$ := offset$
                mstore8(offset$, 68)
                mstore(add(1, offset$), sload(0xf2ee15ea639b73fa3db9b34a245bdfa015c260c598b211bf05a1ecc4b3e3b4f2))
                offset$ := add(offset$, 21)
                return_value$ := $storage_get$0$
            }
            function abc(num) -> return_value$
            {
                let offset$ := msize()
                let var0$ := offset$
                mstore8(offset$, 67)
                offset$ := add(offset$, 1)
                mstore(offset$, shl(0, 10))
                offset$ := add(offset$, 32)
                let add$1 := add$(var0$, num)
                offset$ := msize()
                return_value$ := add$1
            }
            function test_address_storage() -> return_value$
            {
                let offset$ := msize()
                let tx_origin$0 := offset$
                mstore8(offset$, 68)
                offset$ := add(offset$, 1)
                mstore(offset$, shl(96, origin()))
                offset$ := add(offset$, 20)
                sstore(0xf2ee15ea639b73fa3db9b34a245bdfa015c260c598b211bf05a1ecc4b3e3b4f2, mload(add(tx_origin$0, 1)))
            }
            function add$(a, b) -> return_value$
            {
                let a$, a_type$ := load_integer$(a)
                let b$, b_type$ := load_integer$(b)
                b$ := add(a$, b$)
                let max_type := a_type$
                if gt(b_type$, a_type$) { max_type := b_type$ }
                let offset$ := msize()
                mstore8(offset$, max_type)
                mstore(add(offset$, 1), shl(mul(8, sub(32, type_to_byte_size$(max_type))), b$))
                return_value$ := offset$
            }
            function load_integer$(ptr) -> return_value, type
            {
                type := byte(0, mload(ptr))
                let value := mload(add(ptr, 1))
                let size := type_to_byte_size$(type)
                return_value := shr(mul(sub(32, size), 8), value)
            }
            function type_to_byte_size$(type) -> size
            {
                switch type
                case 1 { size := 32 }
                case 2 { size := 1 }
                case 3 { size := 32 }
                case 68 { size := 20 }
                case 102 { size := 32 }
                default {
                    if lt(type, 36)
                    {
                        size := sub(type, 3)
                        leave
                    }
                    if lt(type, 68)
                    {
                        size := sub(type, 35)
                        leave
                    }
                    if lt(type, 102)
                    {
                        size := sub(type, 69)
                        leave
                    }
                }
            }
        }
    }
}


Binary representation:
6102a961000e5f396102a95ff3fe5f3560e01c80630ac298dc811461002a576368aa6be981146100705763957592d681146100d3575f80fd5b6004805f6100366100e3565b5980818084515f1a6044811461004a575f80fd5b50600185019450845160601c825260148501945060208201915060208401935082840383f35b6004805f806043825360018201915083355f1b825260208201915060208401935061009a8161011f565b5980818084515f1a604381146100ae575f80fd5b5060018501945084515f1c825260208501945060208201915060208401935082840383f35b6004805f6100df610150565b5f80f35b5f5980604482537ff2ee15ea639b73fa3db9b34a245bdfa015c260c598b211bf05a1ecc4b3e3b4f2548260010152601582019150809250505090565b5f598060438253600182019150600a5f1b82526020820191506101428482610195565b599250809350505050919050565b5f5980604482536001820191503260601b825260148201915060018101517ff2ee15ea639b73fa3db9b34a245bdfa015c260c598b211bf05a1ecc4b3e3b4f255505090565b5f61019f826101e3565b6101a8856101e3565b818401915082838211156101ba578190505b59818153836101c88361020b565b6020036008021b600182015280965050505050505092915050565b5f8082515f1a905060018301516101f98261020b565b81600882602003021c93505050915091565b5f81600181146102795760028114610282576003811461028b5760448114610294576066811461029d57602483101561024a57600383039150506102a4565b604483101561025f57602383039150506102a4565b606683101561027457604583039150506102a4565b6102a2565b602091506102a2565b600191506102a2565b602091506102a2565b601491506102a2565b602091505b505b91905056

Text representation:
    /* "out.yul":68:87   */
  dataSize(sub_0)
    /* "out.yul":45:66   */
  dataOffset(sub_0)
    /* "out.yul":42:43   */
  0x00
    /* "out.yul":33:88   */
  codecopy
    /* "out.yul":99:118   */
  dataSize(sub_0)
    /* "out.yul":96:97   */
  0x00
    /* "out.yul":89:119   */
  return
stop

sub_0: assembly {
        /* "out.yul":202:205   */
      0x00
        /* "out.yul":189:206   */
      calldataload
        /* "out.yul":184:187   */
      0xe0
        /* "out.yul":180:207   */
      shr
        /* "out.yul":215:224   */
      dup1
        /* "out.yul":230:240   */
      0x0ac298dc
        /* "out.yul":225:1054   */
      dup2
      eq
      tag_8
      jumpi
        /* "out.yul":1060:1070   */
      0x68aa6be9
        /* "out.yul":1055:2131   */
      dup2
      eq
      tag_9
      jumpi
        /* "out.yul":2137:2147   */
      0x957592d6
        /* "out.yul":2132:2313   */
      dup2
      eq
      tag_10
      jumpi
        /* "out.yul":2334:2335   */
      0x00
        /* "out.yul":2331:2332   */
      dup1
        /* "out.yul":2324:2336   */
      revert
        /* "out.yul":225:1054   */
    tag_8:
        /* "out.yul":269:270   */
      0x04
        /* "out.yul":300:316   */
      dup1
        /* "out.yul":339:340   */
      0x00
        /* "out.yul":365:376   */
      tag_11
      tag_1
      jump	// in
    tag_11:
        /* "out.yul":411:418   */
      msize
        /* "out.yul":455:478   */
      dup1
        /* "out.yul":507:530   */
      dup2
        /* "out.yul":564:584   */
      dup1
        /* "out.yul":606:619   */
      dup5
        /* "out.yul":600:620   */
      mload
        /* "out.yul":597:598   */
      0x00
        /* "out.yul":592:621   */
      byte
        /* "out.yul":629:631   */
      0x44
        /* "out.yul":624:634   */
      dup2
      eq
      tag_13
      jumpi
        /* "out.yul":693:694   */
      0x00
        /* "out.yul":690:691   */
      dup1
        /* "out.yul":683:695   */
      revert
        /* "out.yul":624:634   */
    tag_13:
        /* "out.yul":585:699   */
      pop
        /* "out.yul":737:738   */
      0x01
        /* "out.yul":722:735   */
      dup6
        /* "out.yul":718:739   */
      add
        /* "out.yul":701:739   */
      swap5
      pop
        /* "out.yul":783:796   */
      dup5
        /* "out.yul":777:797   */
      mload
        /* "out.yul":773:775   */
      0x60
        /* "out.yul":769:798   */
      shr
        /* "out.yul":747:767   */
      dup3
        /* "out.yul":740:799   */
      mstore
        /* "out.yul":836:838   */
      0x14
        /* "out.yul":821:834   */
      dup6
        /* "out.yul":817:839   */
      add
        /* "out.yul":800:839   */
      swap5
      pop
        /* "out.yul":890:892   */
      0x20
        /* "out.yul":868:888   */
      dup3
        /* "out.yul":864:893   */
      add
        /* "out.yul":840:893   */
      swap2
      pop
        /* "out.yul":951:953   */
      0x20
        /* "out.yul":926:949   */
      dup5
        /* "out.yul":922:954   */
      add
        /* "out.yul":895:954   */
      swap4
      pop
        /* "out.yul":1021:1049   */
      dup3
        /* "out.yul":996:1019   */
      dup5
        /* "out.yul":992:1050   */
      sub
        /* "out.yul":962:990   */
      dup4
        /* "out.yul":955:1051   */
      return
        /* "out.yul":1055:2131   */
    tag_9:
        /* "out.yul":1099:1100   */
      0x04
        /* "out.yul":1130:1146   */
      dup1
        /* "out.yul":1169:1170   */
      0x00
        /* "out.yul":1184:1198   */
      dup1
        /* "out.yul":1225:1227   */
      0x43
        /* "out.yul":1209:1223   */
      dup3
        /* "out.yul":1201:1228   */
      mstore8
        /* "out.yul":1267:1268   */
      0x01
        /* "out.yul":1251:1265   */
      dup3
        /* "out.yul":1247:1269   */
      add
        /* "out.yul":1229:1269   */
      swap2
      pop
        /* "out.yul":1313:1329   */
      dup4
        /* "out.yul":1300:1330   */
      calldataload
        /* "out.yul":1297:1298   */
      0x00
        /* "out.yul":1293:1331   */
      shl
        /* "out.yul":1277:1291   */
      dup3
        /* "out.yul":1270:1332   */
      mstore
        /* "out.yul":1371:1373   */
      0x20
        /* "out.yul":1355:1369   */
      dup3
        /* "out.yul":1351:1374   */
      add
        /* "out.yul":1333:1374   */
      swap2
      pop
        /* "out.yul":1417:1419   */
      0x20
        /* "out.yul":1399:1415   */
      dup5
        /* "out.yul":1395:1420   */
      add
        /* "out.yul":1375:1420   */
      swap4
      pop
        /* "out.yul":1446:1454   */
      tag_14
        /* "out.yul":1450:1453   */
      dup2
        /* "out.yul":1446:1454   */
      tag_2
      jump	// in
    tag_14:
        /* "out.yul":1489:1496   */
      msize
        /* "out.yul":1533:1556   */
      dup1
        /* "out.yul":1585:1608   */
      dup2
        /* "out.yul":1642:1662   */
      dup1
        /* "out.yul":1684:1697   */
      dup5
        /* "out.yul":1678:1698   */
      mload
        /* "out.yul":1675:1676   */
      0x00
        /* "out.yul":1670:1699   */
      byte
        /* "out.yul":1707:1709   */
      0x43
        /* "out.yul":1702:1712   */
      dup2
      eq
      tag_16
      jumpi
        /* "out.yul":1771:1772   */
      0x00
        /* "out.yul":1768:1769   */
      dup1
        /* "out.yul":1761:1773   */
      revert
        /* "out.yul":1702:1712   */
    tag_16:
        /* "out.yul":1663:1777   */
      pop
        /* "out.yul":1815:1816   */
      0x01
        /* "out.yul":1800:1813   */
      dup6
        /* "out.yul":1796:1817   */
      add
        /* "out.yul":1779:1817   */
      swap5
      pop
        /* "out.yul":1860:1873   */
      dup5
        /* "out.yul":1854:1874   */
      mload
        /* "out.yul":1851:1852   */
      0x00
        /* "out.yul":1847:1875   */
      shr
        /* "out.yul":1825:1845   */
      dup3
        /* "out.yul":1818:1876   */
      mstore
        /* "out.yul":1913:1915   */
      0x20
        /* "out.yul":1898:1911   */
      dup6
        /* "out.yul":1894:1916   */
      add
        /* "out.yul":1877:1916   */
      swap5
      pop
        /* "out.yul":1967:1969   */
      0x20
        /* "out.yul":1945:1965   */
      dup3
        /* "out.yul":1941:1970   */
      add
        /* "out.yul":1917:1970   */
      swap2
      pop
        /* "out.yul":2028:2030   */
      0x20
        /* "out.yul":2003:2026   */
      dup5
        /* "out.yul":1999:2031   */
      add
        /* "out.yul":1972:2031   */
      swap4
      pop
        /* "out.yul":2098:2126   */
      dup3
        /* "out.yul":2073:2096   */
      dup5
        /* "out.yul":2069:2127   */
      sub
        /* "out.yul":2039:2067   */
      dup4
        /* "out.yul":2032:2128   */
      return
        /* "out.yul":2132:2313   */
    tag_10:
        /* "out.yul":2176:2177   */
      0x04
        /* "out.yul":2207:2223   */
      dup1
        /* "out.yul":2246:2247   */
      0x00
        /* "out.yul":2272:2294   */
      tag_17
      tag_3
      jump	// in
    tag_17:
        /* "out.yul":2308:2309   */
      0x00
        /* "out.yul":2305:2306   */
      dup1
        /* "out.yul":2298:2310   */
      return
        /* "out.yul":2346:2663   */
    tag_1:
        /* "out.yul":2370:2383   */
      0x00
        /* "out.yul":2403:2410   */
      msize
        /* "out.yul":2441:2448   */
      dup1
        /* "out.yul":2466:2468   */
      0x44
        /* "out.yul":2457:2464   */
      dup3
        /* "out.yul":2449:2469   */
      mstore8
        /* "out.yul":2500:2566   */
      0xf2ee15ea639b73fa3db9b34a245bdfa015c260c598b211bf05a1ecc4b3e3b4f2
        /* "out.yul":2494:2567   */
      sload
        /* "out.yul":2484:2491   */
      dup3
        /* "out.yul":2481:2482   */
      0x01
        /* "out.yul":2477:2492   */
      add
        /* "out.yul":2470:2568   */
      mstore
        /* "out.yul":2622:2624   */
      0x15
        /* "out.yul":2613:2620   */
      dup3
        /* "out.yul":2609:2625   */
      add
        /* "out.yul":2598:2625   */
      swap2
      pop
        /* "out.yul":2646:2661   */
      dup1
        /* "out.yul":2629:2661   */
      swap3
      pop
        /* "out.yul":2384:2663   */
      pop
      pop
        /* "out.yul":2346:2663   */
      swap1
      jump	// out
        /* "out.yul":2664:2934   */
    tag_2:
        /* "out.yul":2685:2698   */
      0x00
        /* "out.yul":2718:2725   */
      msize
        /* "out.yul":2744:2751   */
      dup1
        /* "out.yul":2769:2771   */
      0x43
        /* "out.yul":2760:2767   */
      dup3
        /* "out.yul":2752:2772   */
      mstore8
        /* "out.yul":2797:2798   */
      0x01
        /* "out.yul":2788:2795   */
      dup3
        /* "out.yul":2784:2799   */
      add
        /* "out.yul":2773:2799   */
      swap2
      pop
        /* "out.yul":2823:2825   */
      0x0a
        /* "out.yul":2820:2821   */
      0x00
        /* "out.yul":2816:2826   */
      shl
        /* "out.yul":2807:2814   */
      dup3
        /* "out.yul":2800:2827   */
      mstore
        /* "out.yul":2852:2854   */
      0x20
        /* "out.yul":2843:2850   */
      dup3
        /* "out.yul":2839:2855   */
      add
        /* "out.yul":2828:2855   */
      swap2
      pop
        /* "out.yul":2871:2887   */
      tag_21
        /* "out.yul":2883:2886   */
      dup5
        /* "out.yul":2876:2881   */
      dup3
        /* "out.yul":2871:2887   */
      tag_4
      jump	// in
    tag_21:
        /* "out.yul":2899:2906   */
      msize
        /* "out.yul":2888:2906   */
      swap3
      pop
        /* "out.yul":2927:2932   */
      dup1
        /* "out.yul":2910:2932   */
      swap4
      pop
        /* "out.yul":2699:2934   */
      pop
      pop
      pop
        /* "out.yul":2664:2934   */
      swap2
      swap1
      pop
      jump	// out
        /* "out.yul":2935:3264   */
    tag_3:
        /* "out.yul":2970:2983   */
      0x00
        /* "out.yul":3003:3010   */
      msize
        /* "out.yul":3035:3042   */
      dup1
        /* "out.yul":3060:3062   */
      0x44
        /* "out.yul":3051:3058   */
      dup3
        /* "out.yul":3043:3063   */
      mstore8
        /* "out.yul":3088:3089   */
      0x01
        /* "out.yul":3079:3086   */
      dup3
        /* "out.yul":3075:3090   */
      add
        /* "out.yul":3064:3090   */
      swap2
      pop
        /* "out.yul":3115:3123   */
      origin
        /* "out.yul":3111:3113   */
      0x60
        /* "out.yul":3107:3124   */
      shl
        /* "out.yul":3098:3105   */
      dup3
        /* "out.yul":3091:3125   */
      mstore
        /* "out.yul":3150:3152   */
      0x14
        /* "out.yul":3141:3148   */
      dup3
        /* "out.yul":3137:3153   */
      add
        /* "out.yul":3126:3153   */
      swap2
      pop
        /* "out.yul":3258:3259   */
      0x01
        /* "out.yul":3245:3256   */
      dup2
        /* "out.yul":3241:3260   */
      add
        /* "out.yul":3235:3261   */
      mload
        /* "out.yul":3167:3233   */
      0xf2ee15ea639b73fa3db9b34a245bdfa015c260c598b211bf05a1ecc4b3e3b4f2
        /* "out.yul":3160:3262   */
      sstore
        /* "out.yul":2984:3264   */
      pop
      pop
        /* "out.yul":2935:3264   */
      swap1
      jump	// out
        /* "out.yul":3265:3646   */
    tag_4:
        /* "out.yul":3288:3301   */
      0x00
        /* "out.yul":3325:3341   */
      tag_24
        /* "out.yul":3339:3340   */
      dup3
        /* "out.yul":3325:3341   */
      tag_5
      jump	// in
    tag_24:
        /* "out.yul":3363:3379   */
      tag_25
        /* "out.yul":3377:3378   */
      dup6
        /* "out.yul":3363:3379   */
      tag_5
      jump	// in
    tag_25:
        /* "out.yul":3396:3398   */
      dup2
        /* "out.yul":3392:3394   */
      dup5
        /* "out.yul":3388:3399   */
      add
        /* "out.yul":3382:3399   */
      swap2
      pop
        /* "out.yul":3418:3425   */
      dup3
        /* "out.yul":3443:3450   */
      dup4
        /* "out.yul":3434:3441   */
      dup3
        /* "out.yul":3431:3451   */
      gt
        /* "out.yul":3428:3481   */
      iszero
      tag_26
      jumpi
        /* "out.yul":3470:3477   */
      dup2
        /* "out.yul":3458:3477   */
      swap1
      pop
        /* "out.yul":3428:3481   */
    tag_26:
        /* "out.yul":3499:3506   */
      msize
        /* "out.yul":3526:3534   */
      dup2
        /* "out.yul":3517:3524   */
      dup2
        /* "out.yul":3509:3535   */
      mstore8
        /* "out.yul":3613:3615   */
      dup4
        /* "out.yul":3581:3609   */
      tag_27
        /* "out.yul":3600:3608   */
      dup4
        /* "out.yul":3581:3609   */
      tag_6
      jump	// in
    tag_27:
        /* "out.yul":3577:3579   */
      0x20
        /* "out.yul":3573:3610   */
      sub
        /* "out.yul":3570:3571   */
      0x08
        /* "out.yul":3566:3611   */
      mul
        /* "out.yul":3562:3616   */
      shl
        /* "out.yul":3558:3559   */
      0x01
        /* "out.yul":3549:3556   */
      dup3
        /* "out.yul":3545:3560   */
      add
        /* "out.yul":3538:3617   */
      mstore
        /* "out.yul":3637:3644   */
      dup1
        /* "out.yul":3620:3644   */
      swap7
      pop
        /* "out.yul":3302:3646   */
      pop
      pop
      pop
      pop
      pop
      pop
        /* "out.yul":3265:3646   */
      swap3
      swap2
      pop
      pop
      jump	// out
        /* "out.yul":3650:3868   */
    tag_5:
        /* "out.yul":3681:3693   */
      0x00
        /* "out.yul":3695:3699   */
      dup1
        /* "out.yul":3728:3731   */
      dup3
        /* "out.yul":3722:3732   */
      mload
        /* "out.yul":3719:3720   */
      0x00
        /* "out.yul":3714:3733   */
      byte
        /* "out.yul":3706:3733   */
      swap1
      pop
        /* "out.yul":3766:3767   */
      0x01
        /* "out.yul":3761:3764   */
      dup4
        /* "out.yul":3757:3768   */
      add
        /* "out.yul":3751:3769   */
      mload
        /* "out.yul":3786:3810   */
      tag_29
        /* "out.yul":3805:3809   */
      dup3
        /* "out.yul":3786:3810   */
      tag_6
      jump	// in
    tag_29:
        /* "out.yul":3858:3863   */
      dup2
        /* "out.yul":3854:3855   */
      0x08
        /* "out.yul":3847:3851   */
      dup3
        /* "out.yul":3843:3845   */
      0x20
        /* "out.yul":3839:3852   */
      sub
        /* "out.yul":3835:3856   */
      mul
        /* "out.yul":3831:3864   */
      shr
        /* "out.yul":3815:3864   */
      swap4
      pop
        /* "out.yul":3700:3868   */
      pop
      pop
        /* "out.yul":3650:3868   */
      swap2
      pop
      swap2
      jump	// out
        /* "out.yul":3870:4261   */
    tag_6:
        /* "out.yul":3907:3911   */
      0x00
        /* "out.yul":3923:3927   */
      dup2
        /* "out.yul":3935:3936   */
      0x01
        /* "out.yul":3930:3949   */
      dup2
      eq
      tag_32
      jumpi
        /* "out.yul":3957:3958   */
      0x02
        /* "out.yul":3952:3970   */
      dup2
      eq
      tag_33
      jumpi
        /* "out.yul":3978:3979   */
      0x03
        /* "out.yul":3973:3992   */
      dup2
      eq
      tag_34
      jumpi
        /* "out.yul":4000:4002   */
      0x44
        /* "out.yul":3995:4015   */
      dup2
      eq
      tag_35
      jumpi
        /* "out.yul":4023:4026   */
      0x66
        /* "out.yul":4018:4039   */
      dup2
      eq
      tag_36
      jumpi
        /* "out.yul":4068:4070   */
      0x24
        /* "out.yul":4062:4066   */
      dup4
        /* "out.yul":4059:4071   */
      lt
        /* "out.yul":4056:4118   */
      iszero
      tag_37
      jumpi
        /* "out.yul":4098:4099   */
      0x03
        /* "out.yul":4092:4096   */
      dup4
        /* "out.yul":4088:4100   */
      sub
        /* "out.yul":4080:4100   */
      swap2
      pop
        /* "out.yul":4107:4112   */
      pop
      jump(tag_30)
        /* "out.yul":4056:4118   */
    tag_37:
        /* "out.yul":4135:4137   */
      0x44
        /* "out.yul":4129:4133   */
      dup4
        /* "out.yul":4126:4138   */
      lt
        /* "out.yul":4123:4186   */
      iszero
      tag_38
      jumpi
        /* "out.yul":4165:4167   */
      0x23
        /* "out.yul":4159:4163   */
      dup4
        /* "out.yul":4155:4168   */
      sub
        /* "out.yul":4147:4168   */
      swap2
      pop
        /* "out.yul":4175:4180   */
      pop
      jump(tag_30)
        /* "out.yul":4123:4186   */
    tag_38:
        /* "out.yul":4203:4206   */
      0x66
        /* "out.yul":4197:4201   */
      dup4
        /* "out.yul":4194:4207   */
      lt
        /* "out.yul":4191:4255   */
      iszero
      tag_39
      jumpi
        /* "out.yul":4234:4236   */
      0x45
        /* "out.yul":4228:4232   */
      dup4
        /* "out.yul":4224:4237   */
      sub
        /* "out.yul":4216:4237   */
      swap2
      pop
        /* "out.yul":4244:4249   */
      pop
      jump(tag_30)
        /* "out.yul":4191:4255   */
    tag_39:
        /* "out.yul":3916:4259   */
      jump(tag_31)
        /* "out.yul":3930:3949   */
    tag_32:
        /* "out.yul":3946:3948   */
      0x20
        /* "out.yul":3938:3948   */
      swap2
      pop
        /* "out.yul":3930:3949   */
      jump(tag_31)
        /* "out.yul":3952:3970   */
    tag_33:
        /* "out.yul":3968:3969   */
      0x01
        /* "out.yul":3960:3969   */
      swap2
      pop
        /* "out.yul":3952:3970   */
      jump(tag_31)
        /* "out.yul":3973:3992   */
    tag_34:
        /* "out.yul":3989:3991   */
      0x20
        /* "out.yul":3981:3991   */
      swap2
      pop
        /* "out.yul":3973:3992   */
      jump(tag_31)
        /* "out.yul":3995:4015   */
    tag_35:
        /* "out.yul":4012:4014   */
      0x14
        /* "out.yul":4004:4014   */
      swap2
      pop
        /* "out.yul":3995:4015   */
      jump(tag_31)
        /* "out.yul":4018:4039   */
    tag_36:
        /* "out.yul":4036:4038   */
      0x20
        /* "out.yul":4028:4038   */
      swap2
      pop
        /* "out.yul":3916:4259   */
    tag_31:
      pop
        /* "out.yul":3870:4261   */
    tag_30:
      swap2
      swap1
      pop
      jump	// out
}

