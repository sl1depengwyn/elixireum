
======= out.yul (EVM) =======

Pretty printed source:
object "contract" {
    code {
        datacopy(0, dataoffset("runtime"), datasize("runtime"))
        return(0, datasize("runtime"))
    }
    object "runtime" {
        code {
            let method_id := shr(0xe0, calldataload(0x0))
            switch method_id
            case 0xd33f752c {
                let calldata_offset$ := 4
                let init_calldata_offset$ := calldata_offset$
                let memory_offset$ := 0
                let tuple := memory_offset$
                mstore8(memory_offset$, 3)
                memory_offset$ := add(memory_offset$, 1)
                mstore(memory_offset$, 4)
                memory_offset$ := add(memory_offset$, 32)
                let calldata_offset$$tuple := add(init_calldata_offset$, calldataload(calldata_offset$))
                let init_calldata_offset$$tuple_init := calldata_offset$$tuple
                mstore8(memory_offset$, 67)
                memory_offset$ := add(memory_offset$, 1)
                mstore(memory_offset$, calldataload(calldata_offset$$tuple))
                memory_offset$ := add(memory_offset$, 32)
                calldata_offset$$tuple := add(calldata_offset$$tuple, 32)
                mstore8(memory_offset$, 103)
                memory_offset$ := add(memory_offset$, 1)
                let calldata_offset$$tuple$tuple1 := add(init_calldata_offset$$tuple_init, calldataload(calldata_offset$$tuple))
                let calldata_offset$$tuple$tuple1length := calldataload(calldata_offset$$tuple$tuple1)
                calldata_offset$$tuple$tuple1 := add(calldata_offset$$tuple$tuple1, 32)
                mstore(memory_offset$, calldata_offset$$tuple$tuple1length)
                memory_offset$ := add(memory_offset$, 32)
                let init_calldata_offset$$tuple_init$tuple1init := calldata_offset$$tuple$tuple1
                for {
                    let tuple1$init_calldata_offset$$tuple_initi := 0
                }
                lt(tuple1$init_calldata_offset$$tuple_initi, calldata_offset$$tuple$tuple1length)
                {
                    tuple1$init_calldata_offset$$tuple_initi := add(tuple1$init_calldata_offset$$tuple_initi, 1)
                }
                {
                    mstore8(memory_offset$, 67)
                    memory_offset$ := add(memory_offset$, 1)
                    mstore(memory_offset$, calldataload(calldata_offset$$tuple$tuple1))
                    memory_offset$ := add(memory_offset$, 32)
                    calldata_offset$$tuple$tuple1 := add(calldata_offset$$tuple$tuple1, 32)
                }
                calldata_offset$$tuple := add(calldata_offset$$tuple, 32)
                mstore8(memory_offset$, 103)
                memory_offset$ := add(memory_offset$, 1)
                mstore(memory_offset$, 2)
                memory_offset$ := add(memory_offset$, 32)
                let calldata_offset$$tuple$tuple2init := calldata_offset$$tuple
                for {
                    let tuple2$calldata_offset$$tuplei := 0
                }
                lt(tuple2$calldata_offset$$tuplei, 2)
                {
                    tuple2$calldata_offset$$tuplei := add(tuple2$calldata_offset$$tuplei, 1)
                }
                {
                    mstore8(memory_offset$, 67)
                    memory_offset$ := add(memory_offset$, 1)
                    mstore(memory_offset$, calldataload(calldata_offset$$tuple))
                    memory_offset$ := add(memory_offset$, 32)
                    calldata_offset$$tuple := add(calldata_offset$$tuple, 32)
                }
                mstore8(memory_offset$, 103)
                memory_offset$ := add(memory_offset$, 1)
                let calldata_offset$$tuple$tuple3 := add(init_calldata_offset$$tuple_init, calldataload(calldata_offset$$tuple))
                let calldata_offset$$tuple$tuple3length := calldataload(calldata_offset$$tuple$tuple3)
                calldata_offset$$tuple$tuple3 := add(calldata_offset$$tuple$tuple3, 32)
                mstore(memory_offset$, calldata_offset$$tuple$tuple3length)
                memory_offset$ := add(memory_offset$, 32)
                let init_calldata_offset$$tuple_init$tuple3init := calldata_offset$$tuple$tuple3
                for {
                    let tuple3$init_calldata_offset$$tuple_initi := 0
                }
                lt(tuple3$init_calldata_offset$$tuple_initi, calldata_offset$$tuple$tuple3length)
                {
                    tuple3$init_calldata_offset$$tuple_initi := add(tuple3$init_calldata_offset$$tuple_initi, 1)
                }
                {
                    mstore8(memory_offset$, 67)
                    memory_offset$ := add(memory_offset$, 1)
                    mstore(memory_offset$, calldataload(calldata_offset$$tuple$tuple3))
                    memory_offset$ := add(memory_offset$, 32)
                    calldata_offset$$tuple$tuple3 := add(calldata_offset$$tuple$tuple3, 32)
                }
                calldata_offset$$tuple := add(calldata_offset$$tuple, 32)
                let return_value$ := hard_tuple(tuple)
                let processed_return_value$ := msize()
                let processed_return_value_init$ := processed_return_value$
                let where_to_store_head$ := processed_return_value$
                let where_to_store_head_init$ := where_to_store_head$
                processed_return_value$ := add(processed_return_value$, 32)
                switch byte(0, mload(return_value$))
                case 3 { }
                default { revert(0, 0) }
                return_value$ := add(return_value$, 1)
                switch mload(return_value$)
                case 4 { }
                default { revert(0, 0) }
                return_value$ := add(return_value$, 32)
                let where_to_store_head$i$_$ := processed_return_value$
                let where_to_store_head_init$i$_$ := where_to_store_head$i$_$
                mstore(where_to_store_head$, sub(processed_return_value$, where_to_store_head_init$))
                where_to_store_head$ := add(where_to_store_head$, 32)
                processed_return_value$ := add(processed_return_value$, 160)
                switch byte(0, mload(return_value$))
                case 67 { }
                default { revert(0, 0) }
                return_value$ := add(return_value$, 1)
                mstore(where_to_store_head$i$_$, mload(return_value$))
                return_value$ := add(return_value$, 32)
                where_to_store_head$i$_$ := add(where_to_store_head$i$_$, 32)
                switch byte(0, mload(return_value$))
                case 103 { }
                default { revert(0, 0) }
                return_value$ := add(return_value$, 1)
                let size$1 := mload(return_value$)
                return_value$ := add(return_value$, 32)
                mstore(where_to_store_head$i$_$, sub(processed_return_value$, where_to_store_head_init$i$_$))
                where_to_store_head$i$_$ := add(where_to_store_head$i$_$, 32)
                mstore(processed_return_value$, size$1)
                processed_return_value$ := add(processed_return_value$, 32)
                let where_to_store_head$i$_$i$1_$ := processed_return_value$
                let where_to_store_head_init$i$_$i$1_$ := where_to_store_head$i$_$i$1_$
                processed_return_value$ := add(processed_return_value$, mul(size$1, 32))
                for { let i$1 := 0 } lt(i$1, size$1) { i$1 := add(i$1, 1) }
                {
                    switch byte(0, mload(return_value$))
                    case 67 { }
                    default { revert(0, 0) }
                    return_value$ := add(return_value$, 1)
                    mstore(where_to_store_head$i$_$i$1_$, mload(return_value$))
                    return_value$ := add(return_value$, 32)
                    where_to_store_head$i$_$i$1_$ := add(where_to_store_head$i$_$i$1_$, 32)
                }
                switch byte(0, mload(return_value$))
                case 103 { }
                default { revert(0, 0) }
                return_value$ := add(return_value$, 1)
                let size$2 := mload(return_value$)
                switch size$2
                case 2 { }
                default { revert(0, 0) }
                return_value$ := add(return_value$, 32)
                for { let i$2 := 0 } lt(i$2, size$2) { i$2 := add(i$2, 1) }
                {
                    switch byte(0, mload(return_value$))
                    case 67 { }
                    default { revert(0, 0) }
                    return_value$ := add(return_value$, 1)
                    mstore(where_to_store_head$i$_$, mload(return_value$))
                    return_value$ := add(return_value$, 32)
                    where_to_store_head$i$_$ := add(where_to_store_head$i$_$, 32)
                }
                switch byte(0, mload(return_value$))
                case 103 { }
                default { revert(0, 0) }
                return_value$ := add(return_value$, 1)
                let size$3 := mload(return_value$)
                return_value$ := add(return_value$, 32)
                mstore(where_to_store_head$i$_$, sub(processed_return_value$, where_to_store_head_init$i$_$))
                where_to_store_head$i$_$ := add(where_to_store_head$i$_$, 32)
                mstore(processed_return_value$, size$3)
                processed_return_value$ := add(processed_return_value$, 32)
                let where_to_store_head$i$_$i$3_$ := processed_return_value$
                let where_to_store_head_init$i$_$i$3_$ := where_to_store_head$i$_$i$3_$
                processed_return_value$ := add(processed_return_value$, mul(size$3, 32))
                for { let i$3 := 0 } lt(i$3, size$3) { i$3 := add(i$3, 1) }
                {
                    switch byte(0, mload(return_value$))
                    case 67 { }
                    default { revert(0, 0) }
                    return_value$ := add(return_value$, 1)
                    mstore(where_to_store_head$i$_$i$3_$, mload(return_value$))
                    return_value$ := add(return_value$, 32)
                    where_to_store_head$i$_$i$3_$ := add(where_to_store_head$i$_$i$3_$, 32)
                }
                return(processed_return_value_init$, sub(processed_return_value$, processed_return_value_init$))
            }
            default { revert(0, 0) }
            function hard_tuple(tuple) -> return_value$
            {
                let offset$ := msize()
                return_value$ := tuple
            }
        }
    }
}


Binary representation:
61032661000e5f396103265ff3fe5f3560e01c8063d33f752c8114610014575f80fd5b6004805f8060038253600182019150600482526020820191508335830180604384536001840193508135845260208401935060208201915060678453600184019350813581018035602082019150808652602086019550815f5b8281101561009b57604388536001880197508335885260208801975060208401935060018101905061006e565b506020850194506067875360018701965060028752602087019650845f5b60028110156100e75760438953600189019850863589526020890198506020870196506001810190506100b9565b5060678853600188019750853585018035602082019150808a5260208a019950815f5b828110156101375760438c5360018c019b5083358c5260208c019b5060208401935060018101905061010a565b506020890198506101478a61031b565b5980818060208401935084515f1a60038114610161575f80fd5b50600185019450845160048114610176575f80fd5b506020850194508380828603845260208401935060a08601955086515f1a604381146101a0575f80fd5b506001870196508651825260208701965060208201915086515f1a606781146101c7575f80fd5b5060018701965086516020880197508187038352602083019250808752602087019650868060208302890198505f5b83811015610230578a515f1a6043811461020e575f80fd5b5060018b019a508a51835260208b019a506020830192506001810190506101f6565b5089515f1a60678114610241575f80fd5b5060018a01995089518060028114610257575f80fd5b5060208b019a505f5b8181101561029a578b515f1a60438114610278575f80fd5b5060018c019b508b51875260208c019b50602087019650600181019050610260565b508a515f1a606781146102ab575f80fd5b5060018b019a508a5160208c019b50858b038752602087019650808b5260208b019a508a80602083028d019c505f5b83811015610314578e515f1a604381146102f2575f80fd5b5060018f019e508e51835260208f019e506020830192506001810190506102da565b508b8d038cf35b5f598291505091905056

Text representation:
    /* "out.yul":68:87   */
  dataSize(sub_0)
    /* "out.yul":45:66   */
  dataOffset(sub_0)
    /* "out.yul":42:43   */
  0x00
    /* "out.yul":33:88   */
  codecopy
    /* "out.yul":103:122   */
  dataSize(sub_0)
    /* "out.yul":100:101   */
  0x00
    /* "out.yul":93:123   */
  return
stop

sub_0: assembly {
        /* "out.yul":206:209   */
      0x00
        /* "out.yul":193:210   */
      calldataload
        /* "out.yul":187:191   */
      0xe0
        /* "out.yul":183:211   */
      shr
        /* "out.yul":219:228   */
      dup1
        /* "out.yul":234:244   */
      0xd33f752c
        /* "out.yul":229:8099   */
      dup2
      eq
      tag_3
      jumpi
        /* "out.yul":8120:8121   */
      0x00
        /* "out.yul":8117:8118   */
      dup1
        /* "out.yul":8110:8122   */
      revert
        /* "out.yul":229:8099   */
    tag_3:
        /* "out.yul":273:274   */
      0x04
        /* "out.yul":304:320   */
      dup1
        /* "out.yul":343:344   */
      0x00
        /* "out.yul":360:374   */
      dup1
        /* "out.yul":401:402   */
      0x03
        /* "out.yul":385:399   */
      dup3
        /* "out.yul":377:403   */
      mstore8
        /* "out.yul":442:443   */
      0x01
        /* "out.yul":426:440   */
      dup3
        /* "out.yul":422:444   */
      add
        /* "out.yul":404:444   */
      swap2
      pop
        /* "out.yul":468:469   */
      0x04
        /* "out.yul":452:466   */
      dup3
        /* "out.yul":445:470   */
      mstore
        /* "out.yul":509:511   */
      0x20
        /* "out.yul":493:507   */
      dup3
        /* "out.yul":489:512   */
      add
        /* "out.yul":471:512   */
      swap2
      pop
        /* "out.yul":584:600   */
      dup4
        /* "out.yul":571:601   */
      calldataload
        /* "out.yul":548:569   */
      dup4
        /* "out.yul":544:602   */
      add
        /* "out.yul":645:667   */
      dup1
        /* "out.yul":693:695   */
      0x43
        /* "out.yul":677:691   */
      dup5
        /* "out.yul":669:696   */
      mstore8
        /* "out.yul":735:736   */
      0x01
        /* "out.yul":719:733   */
      dup5
        /* "out.yul":715:737   */
      add
        /* "out.yul":697:737   */
      swap4
      pop
        /* "out.yul":774:796   */
      dup2
        /* "out.yul":761:797   */
      calldataload
        /* "out.yul":745:759   */
      dup5
        /* "out.yul":738:798   */
      mstore
        /* "out.yul":837:839   */
      0x20
        /* "out.yul":821:835   */
      dup5
        /* "out.yul":817:840   */
      add
        /* "out.yul":799:840   */
      swap4
      pop
        /* "out.yul":895:897   */
      0x20
        /* "out.yul":871:893   */
      dup3
        /* "out.yul":867:898   */
      add
        /* "out.yul":841:898   */
      swap2
      pop
        /* "out.yul":923:926   */
      0x67
        /* "out.yul":907:921   */
      dup5
        /* "out.yul":899:927   */
      mstore8
        /* "out.yul":966:967   */
      0x01
        /* "out.yul":950:964   */
      dup5
        /* "out.yul":946:968   */
      add
        /* "out.yul":928:968   */
      swap4
      pop
        /* "out.yul":1058:1080   */
      dup2
        /* "out.yul":1045:1081   */
      calldataload
        /* "out.yul":1011:1043   */
      dup2
        /* "out.yul":1007:1082   */
      add
        /* "out.yul":1140:1169   */
      dup1
        /* "out.yul":1127:1170   */
      calldataload
        /* "out.yul":1239:1241   */
      0x20
        /* "out.yul":1208:1237   */
      dup3
        /* "out.yul":1204:1242   */
      add
        /* "out.yul":1171:1242   */
      swap2
      pop
        /* "out.yul":1268:1303   */
      dup1
        /* "out.yul":1252:1266   */
      dup7
        /* "out.yul":1245:1304   */
      mstore
        /* "out.yul":1343:1345   */
      0x20
        /* "out.yul":1327:1341   */
      dup7
        /* "out.yul":1323:1346   */
      add
        /* "out.yul":1305:1346   */
      swap6
      pop
        /* "out.yul":1399:1428   */
      dup2
        /* "out.yul":1484:1485   */
      0x00
        /* "out.yul":1430:1924   */
    tag_4:
        /* "out.yul":1533:1568   */
      dup3
        /* "out.yul":1491:1531   */
      dup2
        /* "out.yul":1488:1569   */
      lt
        /* "out.yul":1430:1924   */
      iszero
      tag_6
      jumpi
        /* "out.yul":1695:1697   */
      0x43
        /* "out.yul":1679:1693   */
      dup9
        /* "out.yul":1671:1698   */
      mstore8
        /* "out.yul":1737:1738   */
      0x01
        /* "out.yul":1721:1735   */
      dup9
        /* "out.yul":1717:1739   */
      add
        /* "out.yul":1699:1739   */
      swap8
      pop
        /* "out.yul":1776:1805   */
      dup4
        /* "out.yul":1763:1806   */
      calldataload
        /* "out.yul":1747:1761   */
      dup9
        /* "out.yul":1740:1807   */
      mstore
        /* "out.yul":1846:1848   */
      0x20
        /* "out.yul":1830:1844   */
      dup9
        /* "out.yul":1826:1849   */
      add
        /* "out.yul":1808:1849   */
      swap8
      pop
        /* "out.yul":1918:1920   */
      0x20
        /* "out.yul":1887:1916   */
      dup5
        /* "out.yul":1883:1921   */
      add
        /* "out.yul":1850:1921   */
      swap4
      pop
        /* "out.yul":1662:1663   */
      0x01
        /* "out.yul":1620:1660   */
      dup2
        /* "out.yul":1616:1664   */
      add
        /* "out.yul":1572:1664   */
      swap1
      pop
        /* "out.yul":1430:1924   */
      jump(tag_4)
    tag_6:
        /* "out.yul":1434:1487   */
      pop
        /* "out.yul":1980:1982   */
      0x20
        /* "out.yul":1956:1978   */
      dup6
        /* "out.yul":1952:1983   */
      add
        /* "out.yul":1926:1983   */
      swap5
      pop
        /* "out.yul":2008:2011   */
      0x67
        /* "out.yul":1992:2006   */
      dup8
        /* "out.yul":1984:2012   */
      mstore8
        /* "out.yul":2051:2052   */
      0x01
        /* "out.yul":2035:2049   */
      dup8
        /* "out.yul":2031:2053   */
      add
        /* "out.yul":2013:2053   */
      swap7
      pop
        /* "out.yul":2078:2079   */
      0x02
        /* "out.yul":2062:2076   */
      dup8
        /* "out.yul":2055:2080   */
      mstore
        /* "out.yul":2119:2121   */
      0x20
        /* "out.yul":2103:2117   */
      dup8
        /* "out.yul":2099:2122   */
      add
        /* "out.yul":2081:2122   */
      swap7
      pop
        /* "out.yul":2165:2187   */
      dup5
        /* "out.yul":2233:2234   */
      0x00
        /* "out.yul":2189:2588   */
    tag_7:
        /* "out.yul":2272:2273   */
      0x02
        /* "out.yul":2240:2270   */
      dup2
        /* "out.yul":2237:2274   */
      lt
        /* "out.yul":2189:2588   */
      iszero
      tag_9
      jumpi
        /* "out.yul":2380:2382   */
      0x43
        /* "out.yul":2364:2378   */
      dup10
        /* "out.yul":2356:2383   */
      mstore8
        /* "out.yul":2422:2423   */
      0x01
        /* "out.yul":2406:2420   */
      dup10
        /* "out.yul":2402:2424   */
      add
        /* "out.yul":2384:2424   */
      swap9
      pop
        /* "out.yul":2461:2483   */
      dup7
        /* "out.yul":2448:2484   */
      calldataload
        /* "out.yul":2432:2446   */
      dup10
        /* "out.yul":2425:2485   */
      mstore
        /* "out.yul":2524:2526   */
      0x20
        /* "out.yul":2508:2522   */
      dup10
        /* "out.yul":2504:2527   */
      add
        /* "out.yul":2486:2527   */
      swap9
      pop
        /* "out.yul":2582:2584   */
      0x20
        /* "out.yul":2558:2580   */
      dup8
        /* "out.yul":2554:2585   */
      add
        /* "out.yul":2528:2585   */
      swap7
      pop
        /* "out.yul":2347:2348   */
      0x01
        /* "out.yul":2315:2345   */
      dup2
        /* "out.yul":2311:2349   */
      add
        /* "out.yul":2277:2349   */
      swap1
      pop
        /* "out.yul":2189:2588   */
      jump(tag_7)
    tag_9:
        /* "out.yul":2193:2236   */
      pop
        /* "out.yul":2613:2616   */
      0x67
        /* "out.yul":2597:2611   */
      dup9
        /* "out.yul":2589:2617   */
      mstore8
        /* "out.yul":2656:2657   */
      0x01
        /* "out.yul":2640:2654   */
      dup9
        /* "out.yul":2636:2658   */
      add
        /* "out.yul":2618:2658   */
      swap8
      pop
        /* "out.yul":2748:2770   */
      dup6
        /* "out.yul":2735:2771   */
      calldataload
        /* "out.yul":2701:2733   */
      dup6
        /* "out.yul":2697:2772   */
      add
        /* "out.yul":2830:2859   */
      dup1
        /* "out.yul":2817:2860   */
      calldataload
        /* "out.yul":2929:2931   */
      0x20
        /* "out.yul":2898:2927   */
      dup3
        /* "out.yul":2894:2932   */
      add
        /* "out.yul":2861:2932   */
      swap2
      pop
        /* "out.yul":2958:2993   */
      dup1
        /* "out.yul":2942:2956   */
      dup11
        /* "out.yul":2935:2994   */
      mstore
        /* "out.yul":3033:3035   */
      0x20
        /* "out.yul":3017:3031   */
      dup11
        /* "out.yul":3013:3036   */
      add
        /* "out.yul":2995:3036   */
      swap10
      pop
        /* "out.yul":3089:3118   */
      dup2
        /* "out.yul":3174:3175   */
      0x00
        /* "out.yul":3120:3614   */
    tag_10:
        /* "out.yul":3223:3258   */
      dup3
        /* "out.yul":3181:3221   */
      dup2
        /* "out.yul":3178:3259   */
      lt
        /* "out.yul":3120:3614   */
      iszero
      tag_12
      jumpi
        /* "out.yul":3385:3387   */
      0x43
        /* "out.yul":3369:3383   */
      dup13
        /* "out.yul":3361:3388   */
      mstore8
        /* "out.yul":3427:3428   */
      0x01
        /* "out.yul":3411:3425   */
      dup13
        /* "out.yul":3407:3429   */
      add
        /* "out.yul":3389:3429   */
      swap12
      pop
        /* "out.yul":3466:3495   */
      dup4
        /* "out.yul":3453:3496   */
      calldataload
        /* "out.yul":3437:3451   */
      dup13
        /* "out.yul":3430:3497   */
      mstore
        /* "out.yul":3536:3538   */
      0x20
        /* "out.yul":3520:3534   */
      dup13
        /* "out.yul":3516:3539   */
      add
        /* "out.yul":3498:3539   */
      swap12
      pop
        /* "out.yul":3608:3610   */
      0x20
        /* "out.yul":3577:3606   */
      dup5
        /* "out.yul":3573:3611   */
      add
        /* "out.yul":3540:3611   */
      swap4
      pop
        /* "out.yul":3352:3353   */
      0x01
        /* "out.yul":3310:3350   */
      dup2
        /* "out.yul":3306:3354   */
      add
        /* "out.yul":3262:3354   */
      swap1
      pop
        /* "out.yul":3120:3614   */
      jump(tag_10)
    tag_12:
        /* "out.yul":3124:3177   */
      pop
        /* "out.yul":3670:3672   */
      0x20
        /* "out.yul":3646:3668   */
      dup10
        /* "out.yul":3642:3673   */
      add
        /* "out.yul":3616:3673   */
      swap9
      pop
        /* "out.yul":3700:3717   */
      tag_13
        /* "out.yul":3711:3716   */
      dup11
        /* "out.yul":3700:3717   */
      tag_1
      jump	// in
    tag_13:
        /* "out.yul":3752:3759   */
      msize
        /* "out.yul":3796:3819   */
      dup1
        /* "out.yul":3848:3871   */
      dup2
        /* "out.yul":3905:3925   */
      dup1
        /* "out.yul":3982:3984   */
      0x20
        /* "out.yul":3957:3980   */
      dup5
        /* "out.yul":3953:3985   */
      add
        /* "out.yul":3926:3985   */
      swap4
      pop
        /* "out.yul":4007:4020   */
      dup5
        /* "out.yul":4001:4021   */
      mload
        /* "out.yul":3998:3999   */
      0x00
        /* "out.yul":3993:4022   */
      byte
        /* "out.yul":4030:4031   */
      0x03
        /* "out.yul":4025:4034   */
      dup2
      eq
      tag_15
      jumpi
        /* "out.yul":4093:4094   */
      0x00
        /* "out.yul":4090:4091   */
      dup1
        /* "out.yul":4083:4095   */
      revert
        /* "out.yul":4025:4034   */
    tag_15:
        /* "out.yul":3986:4099   */
      pop
        /* "out.yul":4137:4138   */
      0x01
        /* "out.yul":4122:4135   */
      dup6
        /* "out.yul":4118:4139   */
      add
        /* "out.yul":4101:4139   */
      swap5
      pop
        /* "out.yul":4153:4166   */
      dup5
        /* "out.yul":4147:4167   */
      mload
        /* "out.yul":4175:4176   */
      0x04
        /* "out.yul":4170:4179   */
      dup2
      eq
      tag_17
      jumpi
        /* "out.yul":4247:4248   */
      0x00
        /* "out.yul":4244:4245   */
      dup1
        /* "out.yul":4237:4249   */
      revert
        /* "out.yul":4170:4179   */
    tag_17:
        /* "out.yul":4140:4253   */
      pop
        /* "out.yul":4291:4293   */
      0x20
        /* "out.yul":4276:4289   */
      dup6
        /* "out.yul":4272:4294   */
      add
        /* "out.yul":4255:4294   */
      swap5
      pop
        /* "out.yul":4328:4351   */
      dup4
        /* "out.yul":4389:4413   */
      dup1
        /* "out.yul":4473:4498   */
      dup3
        /* "out.yul":4448:4471   */
      dup7
        /* "out.yul":4444:4499   */
      sub
        /* "out.yul":4422:4442   */
      dup5
        /* "out.yul":4415:4500   */
      mstore
        /* "out.yul":4551:4553   */
      0x20
        /* "out.yul":4529:4549   */
      dup5
        /* "out.yul":4525:4554   */
      add
        /* "out.yul":4501:4554   */
      swap4
      pop
        /* "out.yul":4611:4614   */
      0xa0
        /* "out.yul":4586:4609   */
      dup7
        /* "out.yul":4582:4615   */
      add
        /* "out.yul":4555:4615   */
      swap6
      pop
        /* "out.yul":4639:4652   */
      dup7
        /* "out.yul":4633:4653   */
      mload
        /* "out.yul":4630:4631   */
      0x00
        /* "out.yul":4625:4654   */
      byte
        /* "out.yul":4662:4664   */
      0x43
        /* "out.yul":4657:4667   */
      dup2
      eq
      tag_19
      jumpi
        /* "out.yul":4726:4727   */
      0x00
        /* "out.yul":4723:4724   */
      dup1
        /* "out.yul":4716:4728   */
      revert
        /* "out.yul":4657:4667   */
    tag_19:
        /* "out.yul":4618:4732   */
      pop
        /* "out.yul":4770:4771   */
      0x01
        /* "out.yul":4755:4768   */
      dup8
        /* "out.yul":4751:4772   */
      add
        /* "out.yul":4734:4772   */
      swap7
      pop
        /* "out.yul":4812:4825   */
      dup7
        /* "out.yul":4806:4826   */
      mload
        /* "out.yul":4780:4804   */
      dup3
        /* "out.yul":4773:4827   */
      mstore
        /* "out.yul":4864:4866   */
      0x20
        /* "out.yul":4849:4862   */
      dup8
        /* "out.yul":4845:4867   */
      add
        /* "out.yul":4828:4867   */
      swap7
      pop
        /* "out.yul":4926:4928   */
      0x20
        /* "out.yul":4900:4924   */
      dup3
        /* "out.yul":4896:4929   */
      add
        /* "out.yul":4868:4929   */
      swap2
      pop
        /* "out.yul":4951:4964   */
      dup7
        /* "out.yul":4945:4965   */
      mload
        /* "out.yul":4942:4943   */
      0x00
        /* "out.yul":4937:4966   */
      byte
        /* "out.yul":4974:4977   */
      0x67
        /* "out.yul":4969:4980   */
      dup2
      eq
      tag_21
      jumpi
        /* "out.yul":5039:5040   */
      0x00
        /* "out.yul":5036:5037   */
      dup1
        /* "out.yul":5029:5041   */
      revert
        /* "out.yul":4969:4980   */
    tag_21:
        /* "out.yul":4930:5045   */
      pop
        /* "out.yul":5082:5083   */
      0x01
        /* "out.yul":5067:5080   */
      dup8
        /* "out.yul":5063:5084   */
      add
        /* "out.yul":5046:5084   */
      swap7
      pop
        /* "out.yul":5106:5119   */
      dup7
        /* "out.yul":5100:5120   */
      mload
        /* "out.yul":5157:5159   */
      0x20
        /* "out.yul":5142:5155   */
      dup9
        /* "out.yul":5138:5160   */
      add
        /* "out.yul":5121:5160   */
      swap8
      pop
        /* "out.yul":5226:5255   */
      dup2
        /* "out.yul":5201:5224   */
      dup8
        /* "out.yul":5197:5256   */
      sub
        /* "out.yul":5171:5195   */
      dup4
        /* "out.yul":5164:5257   */
      mstore
        /* "out.yul":5316:5318   */
      0x20
        /* "out.yul":5290:5314   */
      dup4
        /* "out.yul":5286:5319   */
      add
        /* "out.yul":5258:5319   */
      swap3
      pop
        /* "out.yul":5353:5359   */
      dup1
        /* "out.yul":5328:5351   */
      dup8
        /* "out.yul":5321:5360   */
      mstore
        /* "out.yul":5417:5419   */
      0x20
        /* "out.yul":5392:5415   */
      dup8
        /* "out.yul":5388:5420   */
      add
        /* "out.yul":5361:5420   */
      swap7
      pop
        /* "out.yul":5460:5483   */
      dup7
        /* "out.yul":5526:5555   */
      dup1
        /* "out.yul":5625:5627   */
      0x20
        /* "out.yul":5617:5623   */
      dup4
        /* "out.yul":5613:5628   */
      mul
        /* "out.yul":5588:5611   */
      dup10
        /* "out.yul":5584:5629   */
      add
        /* "out.yul":5557:5629   */
      swap9
      pop
        /* "out.yul":5648:5649   */
      0x00
        /* "out.yul":5631:6084   */
    tag_22:
        /* "out.yul":5660:5666   */
      dup4
        /* "out.yul":5655:5658   */
      dup2
        /* "out.yul":5652:5667   */
      lt
        /* "out.yul":5631:6084   */
      iszero
      tag_24
      jumpi
        /* "out.yul":5776:5789   */
      dup11
        /* "out.yul":5770:5790   */
      mload
        /* "out.yul":5767:5768   */
      0x00
        /* "out.yul":5762:5791   */
      byte
        /* "out.yul":5799:5801   */
      0x43
        /* "out.yul":5794:5804   */
      dup2
      eq
      tag_26
      jumpi
        /* "out.yul":5863:5864   */
      0x00
        /* "out.yul":5860:5861   */
      dup1
        /* "out.yul":5853:5865   */
      revert
        /* "out.yul":5794:5804   */
    tag_26:
        /* "out.yul":5755:5869   */
      pop
        /* "out.yul":5907:5908   */
      0x01
        /* "out.yul":5892:5905   */
      dup12
        /* "out.yul":5888:5909   */
      add
        /* "out.yul":5871:5909   */
      swap11
      pop
        /* "out.yul":5954:5967   */
      dup11
        /* "out.yul":5948:5968   */
      mload
        /* "out.yul":5917:5946   */
      dup4
        /* "out.yul":5910:5969   */
      mstore
        /* "out.yul":6006:6008   */
      0x20
        /* "out.yul":5991:6004   */
      dup12
        /* "out.yul":5987:6009   */
      add
        /* "out.yul":5970:6009   */
      swap11
      pop
        /* "out.yul":6078:6080   */
      0x20
        /* "out.yul":6047:6076   */
      dup4
        /* "out.yul":6043:6081   */
      add
        /* "out.yul":6010:6081   */
      swap3
      pop
        /* "out.yul":5686:5687   */
      0x01
        /* "out.yul":5681:5684   */
      dup2
        /* "out.yul":5677:5688   */
      add
        /* "out.yul":5670:5688   */
      swap1
      pop
        /* "out.yul":5631:6084   */
      jump(tag_22)
    tag_24:
        /* "out.yul":5635:5651   */
      pop
        /* "out.yul":6106:6119   */
      dup10
        /* "out.yul":6100:6120   */
      mload
        /* "out.yul":6097:6098   */
      0x00
        /* "out.yul":6092:6121   */
      byte
        /* "out.yul":6129:6132   */
      0x67
        /* "out.yul":6124:6135   */
      dup2
      eq
      tag_28
      jumpi
        /* "out.yul":6194:6195   */
      0x00
        /* "out.yul":6191:6192   */
      dup1
        /* "out.yul":6184:6196   */
      revert
        /* "out.yul":6124:6135   */
    tag_28:
        /* "out.yul":6085:6200   */
      pop
        /* "out.yul":6237:6238   */
      0x01
        /* "out.yul":6222:6235   */
      dup11
        /* "out.yul":6218:6239   */
      add
        /* "out.yul":6201:6239   */
      swap10
      pop
        /* "out.yul":6260:6273   */
      dup10
        /* "out.yul":6254:6274   */
      mload
        /* "out.yul":6283:6289   */
      dup1
        /* "out.yul":6297:6298   */
      0x02
        /* "out.yul":6292:6301   */
      dup2
      eq
      tag_30
      jumpi
        /* "out.yul":6355:6356   */
      0x00
        /* "out.yul":6352:6353   */
      dup1
        /* "out.yul":6345:6357   */
      revert
        /* "out.yul":6292:6301   */
    tag_30:
        /* "out.yul":6276:6361   */
      pop
        /* "out.yul":6399:6401   */
      0x20
        /* "out.yul":6384:6397   */
      dup12
        /* "out.yul":6380:6402   */
      add
        /* "out.yul":6363:6402   */
      swap11
      pop
        /* "out.yul":6421:6422   */
      0x00
        /* "out.yul":6404:6842   */
    tag_31:
        /* "out.yul":6433:6439   */
      dup2
        /* "out.yul":6428:6431   */
      dup2
        /* "out.yul":6425:6440   */
      lt
        /* "out.yul":6404:6842   */
      iszero
      tag_33
      jumpi
        /* "out.yul":6549:6562   */
      dup12
        /* "out.yul":6543:6563   */
      mload
        /* "out.yul":6540:6541   */
      0x00
        /* "out.yul":6535:6564   */
      byte
        /* "out.yul":6572:6574   */
      0x43
        /* "out.yul":6567:6577   */
      dup2
      eq
      tag_35
      jumpi
        /* "out.yul":6636:6637   */
      0x00
        /* "out.yul":6633:6634   */
      dup1
        /* "out.yul":6626:6638   */
      revert
        /* "out.yul":6567:6577   */
    tag_35:
        /* "out.yul":6528:6642   */
      pop
        /* "out.yul":6680:6681   */
      0x01
        /* "out.yul":6665:6678   */
      dup13
        /* "out.yul":6661:6682   */
      add
        /* "out.yul":6644:6682   */
      swap12
      pop
        /* "out.yul":6722:6735   */
      dup12
        /* "out.yul":6716:6736   */
      mload
        /* "out.yul":6690:6714   */
      dup8
        /* "out.yul":6683:6737   */
      mstore
        /* "out.yul":6774:6776   */
      0x20
        /* "out.yul":6759:6772   */
      dup13
        /* "out.yul":6755:6777   */
      add
        /* "out.yul":6738:6777   */
      swap12
      pop
        /* "out.yul":6836:6838   */
      0x20
        /* "out.yul":6810:6834   */
      dup8
        /* "out.yul":6806:6839   */
      add
        /* "out.yul":6778:6839   */
      swap7
      pop
        /* "out.yul":6459:6460   */
      0x01
        /* "out.yul":6454:6457   */
      dup2
        /* "out.yul":6450:6461   */
      add
        /* "out.yul":6443:6461   */
      swap1
      pop
        /* "out.yul":6404:6842   */
      jump(tag_31)
    tag_33:
        /* "out.yul":6408:6424   */
      pop
        /* "out.yul":6864:6877   */
      dup11
        /* "out.yul":6858:6878   */
      mload
        /* "out.yul":6855:6856   */
      0x00
        /* "out.yul":6850:6879   */
      byte
        /* "out.yul":6887:6890   */
      0x67
        /* "out.yul":6882:6893   */
      dup2
      eq
      tag_37
      jumpi
        /* "out.yul":6952:6953   */
      0x00
        /* "out.yul":6949:6950   */
      dup1
        /* "out.yul":6942:6954   */
      revert
        /* "out.yul":6882:6893   */
    tag_37:
        /* "out.yul":6843:6958   */
      pop
        /* "out.yul":6995:6996   */
      0x01
        /* "out.yul":6980:6993   */
      dup12
        /* "out.yul":6976:6997   */
      add
        /* "out.yul":6959:6997   */
      swap11
      pop
        /* "out.yul":7019:7032   */
      dup11
        /* "out.yul":7013:7033   */
      mload
        /* "out.yul":7070:7072   */
      0x20
        /* "out.yul":7055:7068   */
      dup13
        /* "out.yul":7051:7073   */
      add
        /* "out.yul":7034:7073   */
      swap12
      pop
        /* "out.yul":7139:7168   */
      dup6
        /* "out.yul":7114:7137   */
      dup12
        /* "out.yul":7110:7169   */
      sub
        /* "out.yul":7084:7108   */
      dup8
        /* "out.yul":7077:7170   */
      mstore
        /* "out.yul":7229:7231   */
      0x20
        /* "out.yul":7203:7227   */
      dup8
        /* "out.yul":7199:7232   */
      add
        /* "out.yul":7171:7232   */
      swap7
      pop
        /* "out.yul":7266:7272   */
      dup1
        /* "out.yul":7241:7264   */
      dup12
        /* "out.yul":7234:7273   */
      mstore
        /* "out.yul":7330:7332   */
      0x20
        /* "out.yul":7305:7328   */
      dup12
        /* "out.yul":7301:7333   */
      add
        /* "out.yul":7274:7333   */
      swap11
      pop
        /* "out.yul":7373:7396   */
      dup11
        /* "out.yul":7439:7468   */
      dup1
        /* "out.yul":7538:7540   */
      0x20
        /* "out.yul":7530:7536   */
      dup4
        /* "out.yul":7526:7541   */
      mul
        /* "out.yul":7501:7524   */
      dup14
        /* "out.yul":7497:7542   */
      add
        /* "out.yul":7470:7542   */
      swap13
      pop
        /* "out.yul":7561:7562   */
      0x00
        /* "out.yul":7544:7997   */
    tag_38:
        /* "out.yul":7573:7579   */
      dup4
        /* "out.yul":7568:7571   */
      dup2
        /* "out.yul":7565:7580   */
      lt
        /* "out.yul":7544:7997   */
      iszero
      tag_40
      jumpi
        /* "out.yul":7689:7702   */
      dup15
        /* "out.yul":7683:7703   */
      mload
        /* "out.yul":7680:7681   */
      0x00
        /* "out.yul":7675:7704   */
      byte
        /* "out.yul":7712:7714   */
      0x43
        /* "out.yul":7707:7717   */
      dup2
      eq
      tag_42
      jumpi
        /* "out.yul":7776:7777   */
      0x00
        /* "out.yul":7773:7774   */
      dup1
        /* "out.yul":7766:7778   */
      revert
        /* "out.yul":7707:7717   */
    tag_42:
        /* "out.yul":7668:7782   */
      pop
        /* "out.yul":7820:7821   */
      0x01
        /* "out.yul":7805:7818   */
      dup16
        /* "out.yul":7801:7822   */
      add
        /* "out.yul":7784:7822   */
      swap15
      pop
        /* "out.yul":7867:7880   */
      dup15
        /* "out.yul":7861:7881   */
      mload
        /* "out.yul":7830:7859   */
      dup4
        /* "out.yul":7823:7882   */
      mstore
        /* "out.yul":7919:7921   */
      0x20
        /* "out.yul":7904:7917   */
      dup16
        /* "out.yul":7900:7922   */
      add
        /* "out.yul":7883:7922   */
      swap15
      pop
        /* "out.yul":7991:7993   */
      0x20
        /* "out.yul":7960:7989   */
      dup4
        /* "out.yul":7956:7994   */
      add
        /* "out.yul":7923:7994   */
      swap3
      pop
        /* "out.yul":7599:7600   */
      0x01
        /* "out.yul":7594:7597   */
      dup2
        /* "out.yul":7590:7601   */
      add
        /* "out.yul":7583:7601   */
      swap1
      pop
        /* "out.yul":7544:7997   */
      jump(tag_38)
    tag_40:
        /* "out.yul":7548:7564   */
      pop
        /* "out.yul":8066:8094   */
      dup12
        /* "out.yul":8041:8064   */
      dup14
        /* "out.yul":8037:8095   */
      sub
        /* "out.yul":8007:8035   */
      dup13
        /* "out.yul":8000:8096   */
      return
        /* "out.yul":8132:8235   */
    tag_1:
        /* "out.yul":8162:8175   */
      0x00
        /* "out.yul":8195:8202   */
      msize
        /* "out.yul":8228:8233   */
      dup3
        /* "out.yul":8211:8233   */
      swap2
      pop
        /* "out.yul":8176:8235   */
      pop
        /* "out.yul":8132:8235   */
      swap2
      swap1
      pop
      jump	// out
}

