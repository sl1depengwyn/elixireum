
======= out.yul (EVM) =======

Pretty printed source:
object "contract" {
    code {
        datacopy(0, dataoffset("runtime"), datasize("runtime"))
        return(0, datasize("runtime"))
    }
    object "runtime" {
        code {
            let method_id := shr(224, calldataload(0x0))
            switch method_id
            case 0x0ac298dc {
                let calldata_offset$ := 4
                let init_calldata_offset$ := calldata_offset$
                let memory_offset$ := 0
                let return_value$ := get_owner()
                let processed_return_value$ := msize()
                let processed_return_value_init$ := processed_return_value$
                let where_to_store_head$ := processed_return_value$
                let where_to_store_head_init$ := where_to_store_head$
                switch byte(0, mload(return_value$))
                case 68 { }
                default { revert(0, 0) }
                return_value$ := add(return_value$, 1)
                mstore(where_to_store_head$, shr(96, mload(return_value$)))
                return_value$ := add(return_value$, 20)
                where_to_store_head$ := add(where_to_store_head$, 32)
                processed_return_value$ := add(processed_return_value$, 32)
                return(processed_return_value_init$, sub(processed_return_value$, processed_return_value_init$))
            }
            case 0xea54e440 {
                let calldata_offset$ := 4
                let init_calldata_offset$ := calldata_offset$
                let memory_offset$ := 0
                let return_value$ := test_address()
                let processed_return_value$ := msize()
                let processed_return_value_init$ := processed_return_value$
                let where_to_store_head$ := processed_return_value$
                let where_to_store_head_init$ := where_to_store_head$
                switch byte(0, mload(return_value$))
                case 68 { }
                default { revert(0, 0) }
                return_value$ := add(return_value$, 1)
                mstore(where_to_store_head$, shr(96, mload(return_value$)))
                return_value$ := add(return_value$, 20)
                where_to_store_head$ := add(where_to_store_head$, 32)
                processed_return_value$ := add(processed_return_value$, 32)
                return(processed_return_value_init$, sub(processed_return_value$, processed_return_value_init$))
            }
            case 0x68aa6be9 {
                let calldata_offset$ := 4
                let init_calldata_offset$ := calldata_offset$
                let memory_offset$ := 0
                let num := memory_offset$
                mstore8(memory_offset$, 67)
                memory_offset$ := add(memory_offset$, 1)
                mstore(memory_offset$, shl(0, calldataload(calldata_offset$)))
                memory_offset$ := add(memory_offset$, 32)
                calldata_offset$ := add(calldata_offset$, 32)
                let return_value$ := abc(num)
                let processed_return_value$ := msize()
                let processed_return_value_init$ := processed_return_value$
                let where_to_store_head$ := processed_return_value$
                let where_to_store_head_init$ := where_to_store_head$
                switch byte(0, mload(return_value$))
                case 67 { }
                default { revert(0, 0) }
                return_value$ := add(return_value$, 1)
                mstore(where_to_store_head$, shr(0, mload(return_value$)))
                return_value$ := add(return_value$, 32)
                where_to_store_head$ := add(where_to_store_head$, 32)
                processed_return_value$ := add(processed_return_value$, 32)
                return(processed_return_value_init$, sub(processed_return_value$, processed_return_value_init$))
            }
            case 0xe2179b7f {
                let calldata_offset$ := 4
                let init_calldata_offset$ := calldata_offset$
                let memory_offset$ := 0
                let return_value$ := return_origin()
                let processed_return_value$ := msize()
                let processed_return_value_init$ := processed_return_value$
                let where_to_store_head$ := processed_return_value$
                let where_to_store_head_init$ := where_to_store_head$
                switch byte(0, mload(return_value$))
                case 68 { }
                default { revert(0, 0) }
                return_value$ := add(return_value$, 1)
                mstore(where_to_store_head$, shr(96, mload(return_value$)))
                return_value$ := add(return_value$, 20)
                where_to_store_head$ := add(where_to_store_head$, 32)
                processed_return_value$ := add(processed_return_value$, 32)
                return(processed_return_value_init$, sub(processed_return_value$, processed_return_value_init$))
            }
            case 0x0c8f9aa2 {
                let calldata_offset$ := 4
                let init_calldata_offset$ := calldata_offset$
                let memory_offset$ := 0
                let return_value$ := get_int_test()
                let processed_return_value$ := msize()
                let processed_return_value_init$ := processed_return_value$
                let where_to_store_head$ := processed_return_value$
                let where_to_store_head_init$ := where_to_store_head$
                switch byte(0, mload(return_value$))
                case 67 { }
                default { revert(0, 0) }
                return_value$ := add(return_value$, 1)
                mstore(where_to_store_head$, shr(0, mload(return_value$)))
                return_value$ := add(return_value$, 32)
                where_to_store_head$ := add(where_to_store_head$, 32)
                processed_return_value$ := add(processed_return_value$, 32)
                return(processed_return_value_init$, sub(processed_return_value$, processed_return_value_init$))
            }
            case 0x0131222f {
                let calldata_offset$ := 4
                let init_calldata_offset$ := calldata_offset$
                let memory_offset$ := 0
                let return_value$ := get_address()
                let processed_return_value$ := msize()
                let processed_return_value_init$ := processed_return_value$
                let where_to_store_head$ := processed_return_value$
                let where_to_store_head_init$ := where_to_store_head$
                switch byte(0, mload(return_value$))
                case 68 { }
                default { revert(0, 0) }
                return_value$ := add(return_value$, 1)
                mstore(where_to_store_head$, shr(96, mload(return_value$)))
                return_value$ := add(return_value$, 20)
                where_to_store_head$ := add(where_to_store_head$, 32)
                processed_return_value$ := add(processed_return_value$, 32)
                return(processed_return_value_init$, sub(processed_return_value$, processed_return_value_init$))
            }
            case 0x957592d6 {
                let calldata_offset$ := 4
                let init_calldata_offset$ := calldata_offset$
                let memory_offset$ := 0
                let return_value$ := test_address_storage()
                return(0, 0)
            }
            default { revert(0, 0) }
            function get_owner() -> return_value$
            {
                let offset$ := msize()
                let $storage_get$0$ := offset$
                mstore8(offset$, 68)
                mstore(add(1, offset$), sload(0xf2ee15ea639b73fa3db9b34a245bdfa015c260c598b211bf05a1ecc4b3e3b4f2))
                offset$ := add(offset$, 21)
                return_value$ := $storage_get$0$
            }
            function test_address() -> return_value$
            {
                let offset$ := msize()
                let address2$ := offset$
                mstore8(offset$, 68)
                offset$ := add(offset$, 1)
                mstore(offset$, shl(96, 0x8a258309B8177Df36c48de82885A56cCF576979C))
                offset$ := add(offset$, 20)
                return_value$ := address2$
            }
            function abc(num) -> return_value$
            {
                let offset$ := msize()
                let var0$ := offset$
                mstore8(offset$, 67)
                offset$ := add(offset$, 1)
                mstore(offset$, shl(0, 10))
                offset$ := add(offset$, 32)
                let add$1 := add$(var0$, num)
                offset$ := msize()
                return_value$ := add$1
            }
            function return_origin() -> return_value$
            {
                let offset$ := msize()
                let tx_origin$0 := offset$
                mstore8(offset$, 68)
                offset$ := add(offset$, 1)
                mstore(offset$, shl(96, origin()))
                offset$ := add(offset$, 20)
                return_value$ := tx_origin$0
            }
            function get_int_test() -> return_value$
            {
                let offset$ := msize()
                let $storage_get$0$ := offset$
                mstore8(offset$, 67)
                mstore(add(1, offset$), sload(0xbc36789e7a1e281436464229828f817d6612f7b477d66591ff96a9e064bcc98a))
                offset$ := add(offset$, 33)
                return_value$ := $storage_get$0$
            }
            function get_address() -> return_value$
            {
                let offset$ := msize()
                let $storage_get$0$ := offset$
                mstore8(offset$, 68)
                mstore(add(1, offset$), sload(0x5fe7f977e71dba2ea1a68e21057beebb9be2ac30c6410aa38d4f3fbe41dcffd2))
                offset$ := add(offset$, 21)
                return_value$ := $storage_get$0$
            }
            function test_address_storage() -> return_value$
            {
                let offset$ := msize()
                let tx_origin$0 := offset$
                mstore8(offset$, 68)
                offset$ := add(offset$, 1)
                mstore(offset$, shl(96, origin()))
                offset$ := add(offset$, 20)
                sstore(0xf2ee15ea639b73fa3db9b34a245bdfa015c260c598b211bf05a1ecc4b3e3b4f2, mload(add(tx_origin$0, 1)))
            }
            function load_integer$(ptr) -> return_value, type
            {
                type := byte(0, mload(ptr))
                let value := mload(add(ptr, 1))
                let size := type_to_byte_size$(type)
                return_value := shr(mul(sub(32, size), 8), value)
            }
            function type_to_byte_size$(type) -> size
            {
                switch type
                case 1 { size := 32 }
                case 2 { size := 1 }
                case 3 { size := 32 }
                case 68 { size := 20 }
                case 102 { size := 32 }
                default {
                    if lt(type, 36)
                    {
                        size := sub(type, 3)
                        leave
                    }
                    if lt(type, 68)
                    {
                        size := sub(type, 35)
                        leave
                    }
                    if lt(type, 102)
                    {
                        size := sub(type, 69)
                        leave
                    }
                }
            }
            function add$(a, b) -> return_value$
            {
                let a$, a_type$ := load_integer$(a)
                let b$, b_type$ := load_integer$(b)
                b$ := add(a$, b$)
                let max_type := a_type$
                if gt(b_type$, a_type$) { max_type := b_type$ }
                let offset$ := msize()
                mstore8(offset$, max_type)
                mstore(add(offset$, 1), shl(mul(8, sub(32, type_to_byte_size$(max_type))), b$))
                return_value$ := offset$
            }
        }
    }
}


Binary representation:
6104ba61000e5f396104ba5ff3fe5f3560e01c80630ac298dc81146100565763ea54e440811461009c576368aa6be981146100e25763e2179b7f811461014557630c8f9aa2811461018b57630131222f81146101d05763957592d68114610216575f80fd5b6004805f610062610226565b5980818084515f1a60448114610076575f80fd5b50600185019450845160601c825260148501945060208201915060208401935082840383f35b6004805f6100a8610262565b5980818084515f1a604481146100bc575f80fd5b50600185019450845160601c825260148501945060208201915060208401935082840383f35b6004805f806043825360018201915083355f1b825260208201915060208401935061010c81610297565b5980818084515f1a60438114610120575f80fd5b5060018501945084515f1c825260208501945060208201915060208401935082840383f35b6004805f6101516102c8565b5980818084515f1a60448114610165575f80fd5b50600185019450845160601c825260148501945060208201915060208401935082840383f35b6004805f6101976102e9565b5980818084515f1a604381146101ab575f80fd5b5060018501945084515f1c825260208501945060208201915060208401935082840383f35b6004805f6101dc610325565b5980818084515f1a604481146101f0575f80fd5b50600185019450845160601c825260148501945060208201915060208401935082840383f35b6004805f610222610361565b5f80f35b5f5980604482537ff2ee15ea639b73fa3db9b34a245bdfa015c260c598b211bf05a1ecc4b3e3b4f2548260010152601582019150809250505090565b5f598060448253600182019150738a258309b8177df36c48de82885a56ccf576979c60601b8252601482019150809250505090565b5f598060438253600182019150600a5f1b82526020820191506102ba848261046c565b599250809350505050919050565b5f5980604482536001820191503260601b8252601482019150809250505090565b5f5980604382537fbc36789e7a1e281436464229828f817d6612f7b477d66591ff96a9e064bcc98a548260010152602182019150809250505090565b5f5980604482537f5fe7f977e71dba2ea1a68e21057beebb9be2ac30c6410aa38d4f3fbe41dcffd2548260010152601582019150809250505090565b5f5980604482536001820191503260601b825260148201915060018101517ff2ee15ea639b73fa3db9b34a245bdfa015c260c598b211bf05a1ecc4b3e3b4f255505090565b5f8082515f1a905060018301516103bc826103ce565b81600882602003021c93505050915091565b5f816001811461043c5760028114610445576003811461044e5760448114610457576066811461046057602483101561040d5760038303915050610467565b60448310156104225760238303915050610467565b60668310156104375760458303915050610467565b610465565b60209150610465565b60019150610465565b60209150610465565b60149150610465565b602091505b505b919050565b5f610476826103a6565b61047f856103a6565b81840191508283821115610491578190505b598181538361049f836103ce565b6020036008021b60018201528096505050505050509291505056

Text representation:
    /* "out.yul":68:87   */
  dataSize(sub_0)
    /* "out.yul":45:66   */
  dataOffset(sub_0)
    /* "out.yul":42:43   */
  0x00
    /* "out.yul":33:88   */
  codecopy
    /* "out.yul":99:118   */
  dataSize(sub_0)
    /* "out.yul":96:97   */
  0x00
    /* "out.yul":89:119   */
  return
stop

sub_0: assembly {
        /* "out.yul":202:205   */
      0x00
        /* "out.yul":189:206   */
      calldataload
        /* "out.yul":184:187   */
      0xe0
        /* "out.yul":180:207   */
      shr
        /* "out.yul":215:224   */
      dup1
        /* "out.yul":230:240   */
      0x0ac298dc
        /* "out.yul":225:1054   */
      dup2
      eq
      tag_12
      jumpi
        /* "out.yul":1060:1070   */
      0xea54e440
        /* "out.yul":1055:1887   */
      dup2
      eq
      tag_13
      jumpi
        /* "out.yul":1893:1903   */
      0x68aa6be9
        /* "out.yul":1888:2964   */
      dup2
      eq
      tag_14
      jumpi
        /* "out.yul":2970:2980   */
      0xe2179b7f
        /* "out.yul":2965:3798   */
      dup2
      eq
      tag_15
      jumpi
        /* "out.yul":3804:3814   */
      0x0c8f9aa2
        /* "out.yul":3799:4630   */
      dup2
      eq
      tag_16
      jumpi
        /* "out.yul":4636:4646   */
      0x0131222f
        /* "out.yul":4631:5462   */
      dup2
      eq
      tag_17
      jumpi
        /* "out.yul":5468:5478   */
      0x957592d6
        /* "out.yul":5463:5644   */
      dup2
      eq
      tag_18
      jumpi
        /* "out.yul":5665:5666   */
      0x00
        /* "out.yul":5662:5663   */
      dup1
        /* "out.yul":5655:5667   */
      revert
        /* "out.yul":225:1054   */
    tag_12:
        /* "out.yul":269:270   */
      0x04
        /* "out.yul":300:316   */
      dup1
        /* "out.yul":339:340   */
      0x00
        /* "out.yul":365:376   */
      tag_19
      tag_1
      jump	// in
    tag_19:
        /* "out.yul":411:418   */
      msize
        /* "out.yul":455:478   */
      dup1
        /* "out.yul":507:530   */
      dup2
        /* "out.yul":564:584   */
      dup1
        /* "out.yul":606:619   */
      dup5
        /* "out.yul":600:620   */
      mload
        /* "out.yul":597:598   */
      0x00
        /* "out.yul":592:621   */
      byte
        /* "out.yul":629:631   */
      0x44
        /* "out.yul":624:634   */
      dup2
      eq
      tag_21
      jumpi
        /* "out.yul":693:694   */
      0x00
        /* "out.yul":690:691   */
      dup1
        /* "out.yul":683:695   */
      revert
        /* "out.yul":624:634   */
    tag_21:
        /* "out.yul":585:699   */
      pop
        /* "out.yul":737:738   */
      0x01
        /* "out.yul":722:735   */
      dup6
        /* "out.yul":718:739   */
      add
        /* "out.yul":701:739   */
      swap5
      pop
        /* "out.yul":783:796   */
      dup5
        /* "out.yul":777:797   */
      mload
        /* "out.yul":773:775   */
      0x60
        /* "out.yul":769:798   */
      shr
        /* "out.yul":747:767   */
      dup3
        /* "out.yul":740:799   */
      mstore
        /* "out.yul":836:838   */
      0x14
        /* "out.yul":821:834   */
      dup6
        /* "out.yul":817:839   */
      add
        /* "out.yul":800:839   */
      swap5
      pop
        /* "out.yul":890:892   */
      0x20
        /* "out.yul":868:888   */
      dup3
        /* "out.yul":864:893   */
      add
        /* "out.yul":840:893   */
      swap2
      pop
        /* "out.yul":951:953   */
      0x20
        /* "out.yul":926:949   */
      dup5
        /* "out.yul":922:954   */
      add
        /* "out.yul":895:954   */
      swap4
      pop
        /* "out.yul":1021:1049   */
      dup3
        /* "out.yul":996:1019   */
      dup5
        /* "out.yul":992:1050   */
      sub
        /* "out.yul":962:990   */
      dup4
        /* "out.yul":955:1051   */
      return
        /* "out.yul":1055:1887   */
    tag_13:
        /* "out.yul":1099:1100   */
      0x04
        /* "out.yul":1130:1146   */
      dup1
        /* "out.yul":1169:1170   */
      0x00
        /* "out.yul":1195:1209   */
      tag_22
      tag_2
      jump	// in
    tag_22:
        /* "out.yul":1244:1251   */
      msize
        /* "out.yul":1288:1311   */
      dup1
        /* "out.yul":1340:1363   */
      dup2
        /* "out.yul":1397:1417   */
      dup1
        /* "out.yul":1439:1452   */
      dup5
        /* "out.yul":1433:1453   */
      mload
        /* "out.yul":1430:1431   */
      0x00
        /* "out.yul":1425:1454   */
      byte
        /* "out.yul":1462:1464   */
      0x44
        /* "out.yul":1457:1467   */
      dup2
      eq
      tag_24
      jumpi
        /* "out.yul":1526:1527   */
      0x00
        /* "out.yul":1523:1524   */
      dup1
        /* "out.yul":1516:1528   */
      revert
        /* "out.yul":1457:1467   */
    tag_24:
        /* "out.yul":1418:1532   */
      pop
        /* "out.yul":1570:1571   */
      0x01
        /* "out.yul":1555:1568   */
      dup6
        /* "out.yul":1551:1572   */
      add
        /* "out.yul":1534:1572   */
      swap5
      pop
        /* "out.yul":1616:1629   */
      dup5
        /* "out.yul":1610:1630   */
      mload
        /* "out.yul":1606:1608   */
      0x60
        /* "out.yul":1602:1631   */
      shr
        /* "out.yul":1580:1600   */
      dup3
        /* "out.yul":1573:1632   */
      mstore
        /* "out.yul":1669:1671   */
      0x14
        /* "out.yul":1654:1667   */
      dup6
        /* "out.yul":1650:1672   */
      add
        /* "out.yul":1633:1672   */
      swap5
      pop
        /* "out.yul":1723:1725   */
      0x20
        /* "out.yul":1701:1721   */
      dup3
        /* "out.yul":1697:1726   */
      add
        /* "out.yul":1673:1726   */
      swap2
      pop
        /* "out.yul":1784:1786   */
      0x20
        /* "out.yul":1759:1782   */
      dup5
        /* "out.yul":1755:1787   */
      add
        /* "out.yul":1728:1787   */
      swap4
      pop
        /* "out.yul":1854:1882   */
      dup3
        /* "out.yul":1829:1852   */
      dup5
        /* "out.yul":1825:1883   */
      sub
        /* "out.yul":1795:1823   */
      dup4
        /* "out.yul":1788:1884   */
      return
        /* "out.yul":1888:2964   */
    tag_14:
        /* "out.yul":1932:1933   */
      0x04
        /* "out.yul":1963:1979   */
      dup1
        /* "out.yul":2002:2003   */
      0x00
        /* "out.yul":2017:2031   */
      dup1
        /* "out.yul":2058:2060   */
      0x43
        /* "out.yul":2042:2056   */
      dup3
        /* "out.yul":2034:2061   */
      mstore8
        /* "out.yul":2100:2101   */
      0x01
        /* "out.yul":2084:2098   */
      dup3
        /* "out.yul":2080:2102   */
      add
        /* "out.yul":2062:2102   */
      swap2
      pop
        /* "out.yul":2146:2162   */
      dup4
        /* "out.yul":2133:2163   */
      calldataload
        /* "out.yul":2130:2131   */
      0x00
        /* "out.yul":2126:2164   */
      shl
        /* "out.yul":2110:2124   */
      dup3
        /* "out.yul":2103:2165   */
      mstore
        /* "out.yul":2204:2206   */
      0x20
        /* "out.yul":2188:2202   */
      dup3
        /* "out.yul":2184:2207   */
      add
        /* "out.yul":2166:2207   */
      swap2
      pop
        /* "out.yul":2250:2252   */
      0x20
        /* "out.yul":2232:2248   */
      dup5
        /* "out.yul":2228:2253   */
      add
        /* "out.yul":2208:2253   */
      swap4
      pop
        /* "out.yul":2279:2287   */
      tag_25
        /* "out.yul":2283:2286   */
      dup2
        /* "out.yul":2279:2287   */
      tag_3
      jump	// in
    tag_25:
        /* "out.yul":2322:2329   */
      msize
        /* "out.yul":2366:2389   */
      dup1
        /* "out.yul":2418:2441   */
      dup2
        /* "out.yul":2475:2495   */
      dup1
        /* "out.yul":2517:2530   */
      dup5
        /* "out.yul":2511:2531   */
      mload
        /* "out.yul":2508:2509   */
      0x00
        /* "out.yul":2503:2532   */
      byte
        /* "out.yul":2540:2542   */
      0x43
        /* "out.yul":2535:2545   */
      dup2
      eq
      tag_27
      jumpi
        /* "out.yul":2604:2605   */
      0x00
        /* "out.yul":2601:2602   */
      dup1
        /* "out.yul":2594:2606   */
      revert
        /* "out.yul":2535:2545   */
    tag_27:
        /* "out.yul":2496:2610   */
      pop
        /* "out.yul":2648:2649   */
      0x01
        /* "out.yul":2633:2646   */
      dup6
        /* "out.yul":2629:2650   */
      add
        /* "out.yul":2612:2650   */
      swap5
      pop
        /* "out.yul":2693:2706   */
      dup5
        /* "out.yul":2687:2707   */
      mload
        /* "out.yul":2684:2685   */
      0x00
        /* "out.yul":2680:2708   */
      shr
        /* "out.yul":2658:2678   */
      dup3
        /* "out.yul":2651:2709   */
      mstore
        /* "out.yul":2746:2748   */
      0x20
        /* "out.yul":2731:2744   */
      dup6
        /* "out.yul":2727:2749   */
      add
        /* "out.yul":2710:2749   */
      swap5
      pop
        /* "out.yul":2800:2802   */
      0x20
        /* "out.yul":2778:2798   */
      dup3
        /* "out.yul":2774:2803   */
      add
        /* "out.yul":2750:2803   */
      swap2
      pop
        /* "out.yul":2861:2863   */
      0x20
        /* "out.yul":2836:2859   */
      dup5
        /* "out.yul":2832:2864   */
      add
        /* "out.yul":2805:2864   */
      swap4
      pop
        /* "out.yul":2931:2959   */
      dup3
        /* "out.yul":2906:2929   */
      dup5
        /* "out.yul":2902:2960   */
      sub
        /* "out.yul":2872:2900   */
      dup4
        /* "out.yul":2865:2961   */
      return
        /* "out.yul":2965:3798   */
    tag_15:
        /* "out.yul":3009:3010   */
      0x04
        /* "out.yul":3040:3056   */
      dup1
        /* "out.yul":3079:3080   */
      0x00
        /* "out.yul":3105:3120   */
      tag_28
      tag_4
      jump	// in
    tag_28:
        /* "out.yul":3155:3162   */
      msize
        /* "out.yul":3199:3222   */
      dup1
        /* "out.yul":3251:3274   */
      dup2
        /* "out.yul":3308:3328   */
      dup1
        /* "out.yul":3350:3363   */
      dup5
        /* "out.yul":3344:3364   */
      mload
        /* "out.yul":3341:3342   */
      0x00
        /* "out.yul":3336:3365   */
      byte
        /* "out.yul":3373:3375   */
      0x44
        /* "out.yul":3368:3378   */
      dup2
      eq
      tag_30
      jumpi
        /* "out.yul":3437:3438   */
      0x00
        /* "out.yul":3434:3435   */
      dup1
        /* "out.yul":3427:3439   */
      revert
        /* "out.yul":3368:3378   */
    tag_30:
        /* "out.yul":3329:3443   */
      pop
        /* "out.yul":3481:3482   */
      0x01
        /* "out.yul":3466:3479   */
      dup6
        /* "out.yul":3462:3483   */
      add
        /* "out.yul":3445:3483   */
      swap5
      pop
        /* "out.yul":3527:3540   */
      dup5
        /* "out.yul":3521:3541   */
      mload
        /* "out.yul":3517:3519   */
      0x60
        /* "out.yul":3513:3542   */
      shr
        /* "out.yul":3491:3511   */
      dup3
        /* "out.yul":3484:3543   */
      mstore
        /* "out.yul":3580:3582   */
      0x14
        /* "out.yul":3565:3578   */
      dup6
        /* "out.yul":3561:3583   */
      add
        /* "out.yul":3544:3583   */
      swap5
      pop
        /* "out.yul":3634:3636   */
      0x20
        /* "out.yul":3612:3632   */
      dup3
        /* "out.yul":3608:3637   */
      add
        /* "out.yul":3584:3637   */
      swap2
      pop
        /* "out.yul":3695:3697   */
      0x20
        /* "out.yul":3670:3693   */
      dup5
        /* "out.yul":3666:3698   */
      add
        /* "out.yul":3639:3698   */
      swap4
      pop
        /* "out.yul":3765:3793   */
      dup3
        /* "out.yul":3740:3763   */
      dup5
        /* "out.yul":3736:3794   */
      sub
        /* "out.yul":3706:3734   */
      dup4
        /* "out.yul":3699:3795   */
      return
        /* "out.yul":3799:4630   */
    tag_16:
        /* "out.yul":3843:3844   */
      0x04
        /* "out.yul":3874:3890   */
      dup1
        /* "out.yul":3913:3914   */
      0x00
        /* "out.yul":3939:3953   */
      tag_31
      tag_5
      jump	// in
    tag_31:
        /* "out.yul":3988:3995   */
      msize
        /* "out.yul":4032:4055   */
      dup1
        /* "out.yul":4084:4107   */
      dup2
        /* "out.yul":4141:4161   */
      dup1
        /* "out.yul":4183:4196   */
      dup5
        /* "out.yul":4177:4197   */
      mload
        /* "out.yul":4174:4175   */
      0x00
        /* "out.yul":4169:4198   */
      byte
        /* "out.yul":4206:4208   */
      0x43
        /* "out.yul":4201:4211   */
      dup2
      eq
      tag_33
      jumpi
        /* "out.yul":4270:4271   */
      0x00
        /* "out.yul":4267:4268   */
      dup1
        /* "out.yul":4260:4272   */
      revert
        /* "out.yul":4201:4211   */
    tag_33:
        /* "out.yul":4162:4276   */
      pop
        /* "out.yul":4314:4315   */
      0x01
        /* "out.yul":4299:4312   */
      dup6
        /* "out.yul":4295:4316   */
      add
        /* "out.yul":4278:4316   */
      swap5
      pop
        /* "out.yul":4359:4372   */
      dup5
        /* "out.yul":4353:4373   */
      mload
        /* "out.yul":4350:4351   */
      0x00
        /* "out.yul":4346:4374   */
      shr
        /* "out.yul":4324:4344   */
      dup3
        /* "out.yul":4317:4375   */
      mstore
        /* "out.yul":4412:4414   */
      0x20
        /* "out.yul":4397:4410   */
      dup6
        /* "out.yul":4393:4415   */
      add
        /* "out.yul":4376:4415   */
      swap5
      pop
        /* "out.yul":4466:4468   */
      0x20
        /* "out.yul":4444:4464   */
      dup3
        /* "out.yul":4440:4469   */
      add
        /* "out.yul":4416:4469   */
      swap2
      pop
        /* "out.yul":4527:4529   */
      0x20
        /* "out.yul":4502:4525   */
      dup5
        /* "out.yul":4498:4530   */
      add
        /* "out.yul":4471:4530   */
      swap4
      pop
        /* "out.yul":4597:4625   */
      dup3
        /* "out.yul":4572:4595   */
      dup5
        /* "out.yul":4568:4626   */
      sub
        /* "out.yul":4538:4566   */
      dup4
        /* "out.yul":4531:4627   */
      return
        /* "out.yul":4631:5462   */
    tag_17:
        /* "out.yul":4675:4676   */
      0x04
        /* "out.yul":4706:4722   */
      dup1
        /* "out.yul":4745:4746   */
      0x00
        /* "out.yul":4771:4784   */
      tag_34
      tag_6
      jump	// in
    tag_34:
        /* "out.yul":4819:4826   */
      msize
        /* "out.yul":4863:4886   */
      dup1
        /* "out.yul":4915:4938   */
      dup2
        /* "out.yul":4972:4992   */
      dup1
        /* "out.yul":5014:5027   */
      dup5
        /* "out.yul":5008:5028   */
      mload
        /* "out.yul":5005:5006   */
      0x00
        /* "out.yul":5000:5029   */
      byte
        /* "out.yul":5037:5039   */
      0x44
        /* "out.yul":5032:5042   */
      dup2
      eq
      tag_36
      jumpi
        /* "out.yul":5101:5102   */
      0x00
        /* "out.yul":5098:5099   */
      dup1
        /* "out.yul":5091:5103   */
      revert
        /* "out.yul":5032:5042   */
    tag_36:
        /* "out.yul":4993:5107   */
      pop
        /* "out.yul":5145:5146   */
      0x01
        /* "out.yul":5130:5143   */
      dup6
        /* "out.yul":5126:5147   */
      add
        /* "out.yul":5109:5147   */
      swap5
      pop
        /* "out.yul":5191:5204   */
      dup5
        /* "out.yul":5185:5205   */
      mload
        /* "out.yul":5181:5183   */
      0x60
        /* "out.yul":5177:5206   */
      shr
        /* "out.yul":5155:5175   */
      dup3
        /* "out.yul":5148:5207   */
      mstore
        /* "out.yul":5244:5246   */
      0x14
        /* "out.yul":5229:5242   */
      dup6
        /* "out.yul":5225:5247   */
      add
        /* "out.yul":5208:5247   */
      swap5
      pop
        /* "out.yul":5298:5300   */
      0x20
        /* "out.yul":5276:5296   */
      dup3
        /* "out.yul":5272:5301   */
      add
        /* "out.yul":5248:5301   */
      swap2
      pop
        /* "out.yul":5359:5361   */
      0x20
        /* "out.yul":5334:5357   */
      dup5
        /* "out.yul":5330:5362   */
      add
        /* "out.yul":5303:5362   */
      swap4
      pop
        /* "out.yul":5429:5457   */
      dup3
        /* "out.yul":5404:5427   */
      dup5
        /* "out.yul":5400:5458   */
      sub
        /* "out.yul":5370:5398   */
      dup4
        /* "out.yul":5363:5459   */
      return
        /* "out.yul":5463:5644   */
    tag_18:
        /* "out.yul":5507:5508   */
      0x04
        /* "out.yul":5538:5554   */
      dup1
        /* "out.yul":5577:5578   */
      0x00
        /* "out.yul":5603:5625   */
      tag_37
      tag_7
      jump	// in
    tag_37:
        /* "out.yul":5639:5640   */
      0x00
        /* "out.yul":5636:5637   */
      dup1
        /* "out.yul":5629:5641   */
      return
        /* "out.yul":5677:5994   */
    tag_1:
        /* "out.yul":5701:5714   */
      0x00
        /* "out.yul":5734:5741   */
      msize
        /* "out.yul":5772:5779   */
      dup1
        /* "out.yul":5797:5799   */
      0x44
        /* "out.yul":5788:5795   */
      dup3
        /* "out.yul":5780:5800   */
      mstore8
        /* "out.yul":5831:5897   */
      0xf2ee15ea639b73fa3db9b34a245bdfa015c260c598b211bf05a1ecc4b3e3b4f2
        /* "out.yul":5825:5898   */
      sload
        /* "out.yul":5815:5822   */
      dup3
        /* "out.yul":5812:5813   */
      0x01
        /* "out.yul":5808:5823   */
      add
        /* "out.yul":5801:5899   */
      mstore
        /* "out.yul":5953:5955   */
      0x15
        /* "out.yul":5944:5951   */
      dup3
        /* "out.yul":5940:5956   */
      add
        /* "out.yul":5929:5956   */
      swap2
      pop
        /* "out.yul":5977:5992   */
      dup1
        /* "out.yul":5960:5992   */
      swap3
      pop
        /* "out.yul":5715:5994   */
      pop
      pop
        /* "out.yul":5677:5994   */
      swap1
      jump	// out
        /* "out.yul":5995:6269   */
    tag_2:
        /* "out.yul":6022:6035   */
      0x00
        /* "out.yul":6055:6062   */
      msize
        /* "out.yul":6085:6092   */
      dup1
        /* "out.yul":6110:6112   */
      0x44
        /* "out.yul":6101:6108   */
      dup3
        /* "out.yul":6093:6113   */
      mstore8
        /* "out.yul":6138:6139   */
      0x01
        /* "out.yul":6129:6136   */
      dup3
        /* "out.yul":6125:6140   */
      add
        /* "out.yul":6114:6140   */
      swap2
      pop
        /* "out.yul":6165:6207   */
      0x8a258309b8177df36c48de82885a56ccf576979c
        /* "out.yul":6161:6163   */
      0x60
        /* "out.yul":6157:6208   */
      shl
        /* "out.yul":6148:6155   */
      dup3
        /* "out.yul":6141:6209   */
      mstore
        /* "out.yul":6234:6236   */
      0x14
        /* "out.yul":6225:6232   */
      dup3
        /* "out.yul":6221:6237   */
      add
        /* "out.yul":6210:6237   */
      swap2
      pop
        /* "out.yul":6258:6267   */
      dup1
        /* "out.yul":6241:6267   */
      swap3
      pop
        /* "out.yul":6036:6269   */
      pop
      pop
        /* "out.yul":5995:6269   */
      swap1
      jump	// out
        /* "out.yul":6270:6540   */
    tag_3:
        /* "out.yul":6291:6304   */
      0x00
        /* "out.yul":6324:6331   */
      msize
        /* "out.yul":6350:6357   */
      dup1
        /* "out.yul":6375:6377   */
      0x43
        /* "out.yul":6366:6373   */
      dup3
        /* "out.yul":6358:6378   */
      mstore8
        /* "out.yul":6403:6404   */
      0x01
        /* "out.yul":6394:6401   */
      dup3
        /* "out.yul":6390:6405   */
      add
        /* "out.yul":6379:6405   */
      swap2
      pop
        /* "out.yul":6429:6431   */
      0x0a
        /* "out.yul":6426:6427   */
      0x00
        /* "out.yul":6422:6432   */
      shl
        /* "out.yul":6413:6420   */
      dup3
        /* "out.yul":6406:6433   */
      mstore
        /* "out.yul":6458:6460   */
      0x20
        /* "out.yul":6449:6456   */
      dup3
        /* "out.yul":6445:6461   */
      add
        /* "out.yul":6434:6461   */
      swap2
      pop
        /* "out.yul":6477:6493   */
      tag_42
        /* "out.yul":6489:6492   */
      dup5
        /* "out.yul":6482:6487   */
      dup3
        /* "out.yul":6477:6493   */
      tag_10
      jump	// in
    tag_42:
        /* "out.yul":6505:6512   */
      msize
        /* "out.yul":6494:6512   */
      swap3
      pop
        /* "out.yul":6533:6538   */
      dup1
        /* "out.yul":6516:6538   */
      swap4
      pop
        /* "out.yul":6305:6540   */
      pop
      pop
      pop
        /* "out.yul":6270:6540   */
      swap2
      swap1
      pop
      jump	// out
        /* "out.yul":6541:6786   */
    tag_4:
        /* "out.yul":6569:6582   */
      0x00
        /* "out.yul":6602:6609   */
      msize
        /* "out.yul":6634:6641   */
      dup1
        /* "out.yul":6659:6661   */
      0x44
        /* "out.yul":6650:6657   */
      dup3
        /* "out.yul":6642:6662   */
      mstore8
        /* "out.yul":6687:6688   */
      0x01
        /* "out.yul":6678:6685   */
      dup3
        /* "out.yul":6674:6689   */
      add
        /* "out.yul":6663:6689   */
      swap2
      pop
        /* "out.yul":6714:6722   */
      origin
        /* "out.yul":6710:6712   */
      0x60
        /* "out.yul":6706:6723   */
      shl
        /* "out.yul":6697:6704   */
      dup3
        /* "out.yul":6690:6724   */
      mstore
        /* "out.yul":6749:6751   */
      0x14
        /* "out.yul":6740:6747   */
      dup3
        /* "out.yul":6736:6752   */
      add
        /* "out.yul":6725:6752   */
      swap2
      pop
        /* "out.yul":6773:6784   */
      dup1
        /* "out.yul":6756:6784   */
      swap3
      pop
        /* "out.yul":6583:6786   */
      pop
      pop
        /* "out.yul":6541:6786   */
      swap1
      jump	// out
        /* "out.yul":6787:7107   */
    tag_5:
        /* "out.yul":6814:6827   */
      0x00
        /* "out.yul":6847:6854   */
      msize
        /* "out.yul":6885:6892   */
      dup1
        /* "out.yul":6910:6912   */
      0x43
        /* "out.yul":6901:6908   */
      dup3
        /* "out.yul":6893:6913   */
      mstore8
        /* "out.yul":6944:7010   */
      0xbc36789e7a1e281436464229828f817d6612f7b477d66591ff96a9e064bcc98a
        /* "out.yul":6938:7011   */
      sload
        /* "out.yul":6928:6935   */
      dup3
        /* "out.yul":6925:6926   */
      0x01
        /* "out.yul":6921:6936   */
      add
        /* "out.yul":6914:7012   */
      mstore
        /* "out.yul":7066:7068   */
      0x21
        /* "out.yul":7057:7064   */
      dup3
        /* "out.yul":7053:7069   */
      add
        /* "out.yul":7042:7069   */
      swap2
      pop
        /* "out.yul":7090:7105   */
      dup1
        /* "out.yul":7073:7105   */
      swap3
      pop
        /* "out.yul":6828:7107   */
      pop
      pop
        /* "out.yul":6787:7107   */
      swap1
      jump	// out
        /* "out.yul":7108:7427   */
    tag_6:
        /* "out.yul":7134:7147   */
      0x00
        /* "out.yul":7167:7174   */
      msize
        /* "out.yul":7205:7212   */
      dup1
        /* "out.yul":7230:7232   */
      0x44
        /* "out.yul":7221:7228   */
      dup3
        /* "out.yul":7213:7233   */
      mstore8
        /* "out.yul":7264:7330   */
      0x5fe7f977e71dba2ea1a68e21057beebb9be2ac30c6410aa38d4f3fbe41dcffd2
        /* "out.yul":7258:7331   */
      sload
        /* "out.yul":7248:7255   */
      dup3
        /* "out.yul":7245:7246   */
      0x01
        /* "out.yul":7241:7256   */
      add
        /* "out.yul":7234:7332   */
      mstore
        /* "out.yul":7386:7388   */
      0x15
        /* "out.yul":7377:7384   */
      dup3
        /* "out.yul":7373:7389   */
      add
        /* "out.yul":7362:7389   */
      swap2
      pop
        /* "out.yul":7410:7425   */
      dup1
        /* "out.yul":7393:7425   */
      swap3
      pop
        /* "out.yul":7148:7427   */
      pop
      pop
        /* "out.yul":7108:7427   */
      swap1
      jump	// out
        /* "out.yul":7428:7757   */
    tag_7:
        /* "out.yul":7463:7476   */
      0x00
        /* "out.yul":7496:7503   */
      msize
        /* "out.yul":7528:7535   */
      dup1
        /* "out.yul":7553:7555   */
      0x44
        /* "out.yul":7544:7551   */
      dup3
        /* "out.yul":7536:7556   */
      mstore8
        /* "out.yul":7581:7582   */
      0x01
        /* "out.yul":7572:7579   */
      dup3
        /* "out.yul":7568:7583   */
      add
        /* "out.yul":7557:7583   */
      swap2
      pop
        /* "out.yul":7608:7616   */
      origin
        /* "out.yul":7604:7606   */
      0x60
        /* "out.yul":7600:7617   */
      shl
        /* "out.yul":7591:7598   */
      dup3
        /* "out.yul":7584:7618   */
      mstore
        /* "out.yul":7643:7645   */
      0x14
        /* "out.yul":7634:7641   */
      dup3
        /* "out.yul":7630:7646   */
      add
        /* "out.yul":7619:7646   */
      swap2
      pop
        /* "out.yul":7751:7752   */
      0x01
        /* "out.yul":7738:7749   */
      dup2
        /* "out.yul":7734:7753   */
      add
        /* "out.yul":7728:7754   */
      mload
        /* "out.yul":7660:7726   */
      0xf2ee15ea639b73fa3db9b34a245bdfa015c260c598b211bf05a1ecc4b3e3b4f2
        /* "out.yul":7653:7755   */
      sstore
        /* "out.yul":7477:7757   */
      pop
      pop
        /* "out.yul":7428:7757   */
      swap1
      jump	// out
        /* "out.yul":7760:7978   */
    tag_8:
        /* "out.yul":7791:7803   */
      0x00
        /* "out.yul":7805:7809   */
      dup1
        /* "out.yul":7838:7841   */
      dup3
        /* "out.yul":7832:7842   */
      mload
        /* "out.yul":7829:7830   */
      0x00
        /* "out.yul":7824:7843   */
      byte
        /* "out.yul":7816:7843   */
      swap1
      pop
        /* "out.yul":7876:7877   */
      0x01
        /* "out.yul":7871:7874   */
      dup4
        /* "out.yul":7867:7878   */
      add
        /* "out.yul":7861:7879   */
      mload
        /* "out.yul":7896:7920   */
      tag_48
        /* "out.yul":7915:7919   */
      dup3
        /* "out.yul":7896:7920   */
      tag_9
      jump	// in
    tag_48:
        /* "out.yul":7968:7973   */
      dup2
        /* "out.yul":7964:7965   */
      0x08
        /* "out.yul":7957:7961   */
      dup3
        /* "out.yul":7953:7955   */
      0x20
        /* "out.yul":7949:7962   */
      sub
        /* "out.yul":7945:7966   */
      mul
        /* "out.yul":7941:7974   */
      shr
        /* "out.yul":7925:7974   */
      swap4
      pop
        /* "out.yul":7810:7978   */
      pop
      pop
        /* "out.yul":7760:7978   */
      swap2
      pop
      swap2
      jump	// out
        /* "out.yul":7980:8371   */
    tag_9:
        /* "out.yul":8017:8021   */
      0x00
        /* "out.yul":8033:8037   */
      dup2
        /* "out.yul":8045:8046   */
      0x01
        /* "out.yul":8040:8059   */
      dup2
      eq
      tag_51
      jumpi
        /* "out.yul":8067:8068   */
      0x02
        /* "out.yul":8062:8080   */
      dup2
      eq
      tag_52
      jumpi
        /* "out.yul":8088:8089   */
      0x03
        /* "out.yul":8083:8102   */
      dup2
      eq
      tag_53
      jumpi
        /* "out.yul":8110:8112   */
      0x44
        /* "out.yul":8105:8125   */
      dup2
      eq
      tag_54
      jumpi
        /* "out.yul":8133:8136   */
      0x66
        /* "out.yul":8128:8149   */
      dup2
      eq
      tag_55
      jumpi
        /* "out.yul":8178:8180   */
      0x24
        /* "out.yul":8172:8176   */
      dup4
        /* "out.yul":8169:8181   */
      lt
        /* "out.yul":8166:8228   */
      iszero
      tag_56
      jumpi
        /* "out.yul":8208:8209   */
      0x03
        /* "out.yul":8202:8206   */
      dup4
        /* "out.yul":8198:8210   */
      sub
        /* "out.yul":8190:8210   */
      swap2
      pop
        /* "out.yul":8217:8222   */
      pop
      jump(tag_49)
        /* "out.yul":8166:8228   */
    tag_56:
        /* "out.yul":8245:8247   */
      0x44
        /* "out.yul":8239:8243   */
      dup4
        /* "out.yul":8236:8248   */
      lt
        /* "out.yul":8233:8296   */
      iszero
      tag_57
      jumpi
        /* "out.yul":8275:8277   */
      0x23
        /* "out.yul":8269:8273   */
      dup4
        /* "out.yul":8265:8278   */
      sub
        /* "out.yul":8257:8278   */
      swap2
      pop
        /* "out.yul":8285:8290   */
      pop
      jump(tag_49)
        /* "out.yul":8233:8296   */
    tag_57:
        /* "out.yul":8313:8316   */
      0x66
        /* "out.yul":8307:8311   */
      dup4
        /* "out.yul":8304:8317   */
      lt
        /* "out.yul":8301:8365   */
      iszero
      tag_58
      jumpi
        /* "out.yul":8344:8346   */
      0x45
        /* "out.yul":8338:8342   */
      dup4
        /* "out.yul":8334:8347   */
      sub
        /* "out.yul":8326:8347   */
      swap2
      pop
        /* "out.yul":8354:8359   */
      pop
      jump(tag_49)
        /* "out.yul":8301:8365   */
    tag_58:
        /* "out.yul":8026:8369   */
      jump(tag_50)
        /* "out.yul":8040:8059   */
    tag_51:
        /* "out.yul":8056:8058   */
      0x20
        /* "out.yul":8048:8058   */
      swap2
      pop
        /* "out.yul":8040:8059   */
      jump(tag_50)
        /* "out.yul":8062:8080   */
    tag_52:
        /* "out.yul":8078:8079   */
      0x01
        /* "out.yul":8070:8079   */
      swap2
      pop
        /* "out.yul":8062:8080   */
      jump(tag_50)
        /* "out.yul":8083:8102   */
    tag_53:
        /* "out.yul":8099:8101   */
      0x20
        /* "out.yul":8091:8101   */
      swap2
      pop
        /* "out.yul":8083:8102   */
      jump(tag_50)
        /* "out.yul":8105:8125   */
    tag_54:
        /* "out.yul":8122:8124   */
      0x14
        /* "out.yul":8114:8124   */
      swap2
      pop
        /* "out.yul":8105:8125   */
      jump(tag_50)
        /* "out.yul":8128:8149   */
    tag_55:
        /* "out.yul":8146:8148   */
      0x20
        /* "out.yul":8138:8148   */
      swap2
      pop
        /* "out.yul":8026:8369   */
    tag_50:
      pop
        /* "out.yul":7980:8371   */
    tag_49:
      swap2
      swap1
      pop
      jump	// out
        /* "out.yul":8373:8754   */
    tag_10:
        /* "out.yul":8396:8409   */
      0x00
        /* "out.yul":8433:8449   */
      tag_60
        /* "out.yul":8447:8448   */
      dup3
        /* "out.yul":8433:8449   */
      tag_8
      jump	// in
    tag_60:
        /* "out.yul":8471:8487   */
      tag_61
        /* "out.yul":8485:8486   */
      dup6
        /* "out.yul":8471:8487   */
      tag_8
      jump	// in
    tag_61:
        /* "out.yul":8504:8506   */
      dup2
        /* "out.yul":8500:8502   */
      dup5
        /* "out.yul":8496:8507   */
      add
        /* "out.yul":8490:8507   */
      swap2
      pop
        /* "out.yul":8526:8533   */
      dup3
        /* "out.yul":8551:8558   */
      dup4
        /* "out.yul":8542:8549   */
      dup3
        /* "out.yul":8539:8559   */
      gt
        /* "out.yul":8536:8589   */
      iszero
      tag_62
      jumpi
        /* "out.yul":8578:8585   */
      dup2
        /* "out.yul":8566:8585   */
      swap1
      pop
        /* "out.yul":8536:8589   */
    tag_62:
        /* "out.yul":8607:8614   */
      msize
        /* "out.yul":8634:8642   */
      dup2
        /* "out.yul":8625:8632   */
      dup2
        /* "out.yul":8617:8643   */
      mstore8
        /* "out.yul":8721:8723   */
      dup4
        /* "out.yul":8689:8717   */
      tag_63
        /* "out.yul":8708:8716   */
      dup4
        /* "out.yul":8689:8717   */
      tag_9
      jump	// in
    tag_63:
        /* "out.yul":8685:8687   */
      0x20
        /* "out.yul":8681:8718   */
      sub
        /* "out.yul":8678:8679   */
      0x08
        /* "out.yul":8674:8719   */
      mul
        /* "out.yul":8670:8724   */
      shl
        /* "out.yul":8666:8667   */
      0x01
        /* "out.yul":8657:8664   */
      dup3
        /* "out.yul":8653:8668   */
      add
        /* "out.yul":8646:8725   */
      mstore
        /* "out.yul":8745:8752   */
      dup1
        /* "out.yul":8728:8752   */
      swap7
      pop
        /* "out.yul":8410:8754   */
      pop
      pop
      pop
      pop
      pop
      pop
        /* "out.yul":8373:8754   */
      swap3
      swap2
      pop
      pop
      jump	// out
}

