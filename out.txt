
======= out.yul (EVM) =======

Pretty printed source:
object "contract" {
    code {
        {
            let programSize := datasize("contract")
            let argSize := sub(codesize(), programSize)
            codecopy(0, programSize, argSize)
            let calldata_offset$ := 0
            let init_calldata_offset$ := calldata_offset$
            let memory_offset$ := sub(codesize(), datasize("contract"))
            let a := memory_offset$
            mstore8(memory_offset$, 67)
            memory_offset$ := add(memory_offset$, 1)
            mstore(memory_offset$, shl(0, mload(calldata_offset$)))
            memory_offset$ := add(memory_offset$, 32)
            calldata_offset$ := add(calldata_offset$, 32)
            let _$ := constructor(a)
            let code_offset$ := msize()
            datacopy(code_offset$, dataoffset("runtime"), datasize("runtime"))
            return(code_offset$, datasize("runtime"))
        }
        function constructor(a) -> return_value$
        {
            let offset$ := msize()
            sstore(0xbc36789e7a1e281436464229828f817d6612f7b477d66591ff96a9e064bcc98a, shl(0, mload(add(a, 1))))
        }
    }
    object "runtime" {
        code {
            let method_id := shr(224, calldataload(0x0))
            switch method_id
            case 0xea54e440 {
                let calldata_offset$ := 4
                let init_calldata_offset$ := calldata_offset$
                let memory_offset$ := 0
                let return_value$ := test_address()
                let processed_return_value$ := msize()
                let processed_return_value_init$ := processed_return_value$
                let where_to_store_head$ := processed_return_value$
                let where_to_store_head_init$ := where_to_store_head$
                switch byte(0, mload(return_value$))
                case 68 { }
                default { revert(0, 0) }
                return_value$ := add(return_value$, 1)
                mstore(where_to_store_head$, shr(96, mload(return_value$)))
                return_value$ := add(return_value$, 20)
                where_to_store_head$ := add(where_to_store_head$, 32)
                processed_return_value$ := add(processed_return_value$, 32)
                return(processed_return_value_init$, sub(processed_return_value$, processed_return_value_init$))
            }
            case 0x68aa6be9 {
                let calldata_offset$ := 4
                let init_calldata_offset$ := calldata_offset$
                let memory_offset$ := 0
                let num := memory_offset$
                mstore8(memory_offset$, 67)
                memory_offset$ := add(memory_offset$, 1)
                mstore(memory_offset$, shl(0, calldataload(calldata_offset$)))
                memory_offset$ := add(memory_offset$, 32)
                calldata_offset$ := add(calldata_offset$, 32)
                let return_value$ := abc(num)
                let processed_return_value$ := msize()
                let processed_return_value_init$ := processed_return_value$
                let where_to_store_head$ := processed_return_value$
                let where_to_store_head_init$ := where_to_store_head$
                switch byte(0, mload(return_value$))
                case 67 { }
                default { revert(0, 0) }
                return_value$ := add(return_value$, 1)
                mstore(where_to_store_head$, shr(0, mload(return_value$)))
                return_value$ := add(return_value$, 32)
                where_to_store_head$ := add(where_to_store_head$, 32)
                processed_return_value$ := add(processed_return_value$, 32)
                return(processed_return_value_init$, sub(processed_return_value$, processed_return_value_init$))
            }
            case 0xe2179b7f {
                let calldata_offset$ := 4
                let init_calldata_offset$ := calldata_offset$
                let memory_offset$ := 0
                let return_value$ := return_origin()
                let processed_return_value$ := msize()
                let processed_return_value_init$ := processed_return_value$
                let where_to_store_head$ := processed_return_value$
                let where_to_store_head_init$ := where_to_store_head$
                switch byte(0, mload(return_value$))
                case 68 { }
                default { revert(0, 0) }
                return_value$ := add(return_value$, 1)
                mstore(where_to_store_head$, shr(96, mload(return_value$)))
                return_value$ := add(return_value$, 20)
                where_to_store_head$ := add(where_to_store_head$, 32)
                processed_return_value$ := add(processed_return_value$, 32)
                return(processed_return_value_init$, sub(processed_return_value$, processed_return_value_init$))
            }
            case 0x0c8f9aa2 {
                let calldata_offset$ := 4
                let init_calldata_offset$ := calldata_offset$
                let memory_offset$ := 0
                let return_value$ := get_int_test()
                let processed_return_value$ := msize()
                let processed_return_value_init$ := processed_return_value$
                let where_to_store_head$ := processed_return_value$
                let where_to_store_head_init$ := where_to_store_head$
                switch byte(0, mload(return_value$))
                case 67 { }
                default { revert(0, 0) }
                return_value$ := add(return_value$, 1)
                mstore(where_to_store_head$, shr(0, mload(return_value$)))
                return_value$ := add(return_value$, 32)
                where_to_store_head$ := add(where_to_store_head$, 32)
                processed_return_value$ := add(processed_return_value$, 32)
                return(processed_return_value_init$, sub(processed_return_value$, processed_return_value_init$))
            }
            default { revert(0, 0) }
            function constructor(a) -> return_value$
            {
                let offset$ := msize()
                sstore(0xbc36789e7a1e281436464229828f817d6612f7b477d66591ff96a9e064bcc98a, shl(0, mload(add(a, 1))))
            }
            function test_address() -> return_value$
            {
                let offset$ := msize()
                let address2$ := offset$
                mstore8(offset$, 68)
                offset$ := add(offset$, 1)
                mstore(offset$, shl(96, 0x8a258309B8177Df36c48de82885A56cCF576979C))
                offset$ := add(offset$, 20)
                return_value$ := address2$
            }
            function abc(num) -> return_value$
            {
                let offset$ := msize()
                let var0$ := offset$
                mstore8(offset$, 67)
                offset$ := add(offset$, 1)
                mstore(offset$, shl(0, 10))
                offset$ := add(offset$, 32)
                let add$1 := add$(var0$, num)
                offset$ := msize()
                return_value$ := add$1
            }
            function return_origin() -> return_value$
            {
                let offset$ := msize()
                let tx_origin$0 := offset$
                mstore8(offset$, 68)
                offset$ := add(offset$, 1)
                mstore(offset$, shl(96, origin()))
                offset$ := add(offset$, 20)
                return_value$ := tx_origin$0
            }
            function get_int_test() -> return_value$
            {
                let offset$ := msize()
                let $storage_get$0$ := offset$
                mstore8(offset$, 67)
                mstore(add(1, offset$), shr(0, sload(0xbc36789e7a1e281436464229828f817d6612f7b477d66591ff96a9e064bcc98a)))
                offset$ := add(offset$, 33)
                return_value$ := $storage_get$0$
            }
            function add$(a, b) -> return_value$
            {
                let a$, a_type$ := load_integer$(a)
                let b$, b_type$ := load_integer$(b)
                b$ := add(a$, b$)
                let c := a_type$
                if gt(b_type$, a_type$) { c := b_type$ }
                let offset$ := msize()
                mstore8(offset$, c)
                mstore(add(offset$, 1), shl(mul(8, sub(32, type_to_byte_size$(c))), b$))
                return_value$ := offset$
            }
            function load_integer$(ptr) -> return_value, type
            {
                type := byte(0, mload(ptr))
                let value := mload(add(ptr, 1))
                let size := type_to_byte_size$(type)
                return_value := shl(mul(sub(32, size), 8), value)
            }
            function type_to_byte_size$(type) -> size
            {
                switch type
                case 1 { size := 32 }
                case 2 { size := 1 }
                case 3 { size := 32 }
                case 68 { size := 20 }
                case 102 { size := 32 }
                default {
                    if lt(type, 36)
                    {
                        size := sub(type, 3)
                        leave
                    }
                    if lt(type, 68)
                    {
                        size := sub(type, 35)
                        leave
                    }
                    if lt(type, 102)
                    {
                        size := sub(type, 69)
                        leave
                    }
                }
            }
        }
    }
}


Binary representation:
6103b780380380825f395f806103b73803806043825360018201915083515f1b82526020820191506020840193506034816043565b59610342610075823961034281f35b5f5960018301515f1b7fbc36789e7a1e281436464229828f817d6612f7b477d66591ff96a9e064bcc98a555091905056fe5f3560e01c8063ea54e4408114610035576368aa6be9811461007b5763e2179b7f81146100de57630c8f9aa28114610124575f80fd5b6004805f610041610169565b5980818084515f1a60448114610055575f80fd5b50600185019450845160601c825260148501945060208201915060208401935082840383f35b6004805f806043825360018201915083355f1b82526020820191506020840193506100a58161019e565b5980818084515f1a604381146100b9575f80fd5b5060018501945084515f1c825260208501945060208201915060208401935082840383f35b6004805f6100ea6101cf565b5980818084515f1a604481146100fe575f80fd5b50600185019450845160601c825260148501945060208201915060208401935082840383f35b6004805f6101306101f0565b5980818084515f1a60438114610144575f80fd5b5060018501945084515f1c825260208501945060208201915060208401935082840383f35b5f598060448253600182019150738a258309b8177df36c48de82885a56ccf576979c60601b8252601482019150809250505090565b5f598060438253600182019150600a5f1b82526020820191506101c1848261022e565b599250809350505050919050565b5f5980604482536001820191503260601b8252601482019150809250505090565b5f5980604382537fbc36789e7a1e281436464229828f817d6612f7b477d66591ff96a9e064bcc98a545f1c8260010152602182019150809250505090565b5f6102388261027c565b6102418561027c565b81840191508283821115610253578190505b5981815383610261836102a4565b6020036008021b600182015280965050505050505092915050565b5f8082515f1a90506001830151610292826102a4565b81600882602003021b93505050915091565b5f8160018114610312576002811461031b5760038114610324576044811461032d57606681146103365760248310156102e3576003830391505061033d565b60448310156102f8576023830391505061033d565b606683101561030d576045830391505061033d565b61033b565b6020915061033b565b6001915061033b565b6020915061033b565b6014915061033b565b602091505b505b91905056

Text representation:
    /* "out.yul":56:76   */
  bytecodeSize
    /* "out.yul":110:121   */
  dup1
    /* "out.yul":98:108   */
  codesize
    /* "out.yul":94:122   */
  sub
    /* "out.yul":151:158   */
  dup1
    /* "out.yul":138:149   */
  dup3
    /* "out.yul":135:136   */
  0x00
    /* "out.yul":126:159   */
  codecopy
    /* "out.yul":187:188   */
  0x00
    /* "out.yul":218:234   */
  dup1
    /* "out.yul":273:293   */
  bytecodeSize
    /* "out.yul":261:271   */
  codesize
    /* "out.yul":257:294   */
  sub
    /* "out.yul":306:320   */
  dup1
    /* "out.yul":347:349   */
  0x43
    /* "out.yul":331:345   */
  dup3
    /* "out.yul":323:350   */
  mstore8
    /* "out.yul":389:390   */
  0x01
    /* "out.yul":373:387   */
  dup3
    /* "out.yul":369:391   */
  add
    /* "out.yul":351:391   */
  swap2
  pop
    /* "out.yul":428:444   */
  dup4
    /* "out.yul":422:445   */
  mload
    /* "out.yul":419:420   */
  0x00
    /* "out.yul":415:446   */
  shl
    /* "out.yul":399:413   */
  dup3
    /* "out.yul":392:447   */
  mstore
    /* "out.yul":486:488   */
  0x20
    /* "out.yul":470:484   */
  dup3
    /* "out.yul":466:489   */
  add
    /* "out.yul":448:489   */
  swap2
  pop
    /* "out.yul":532:534   */
  0x20
    /* "out.yul":514:530   */
  dup5
    /* "out.yul":510:535   */
  add
    /* "out.yul":490:535   */
  swap4
  pop
    /* "out.yul":550:564   */
  tag_2
    /* "out.yul":562:563   */
  dup2
    /* "out.yul":550:564   */
  tag_1
  jump	// in
tag_2:
    /* "out.yul":587:594   */
  msize
    /* "out.yul":643:662   */
  dataSize(sub_0)
    /* "out.yul":620:641   */
  dataOffset(sub_0)
    /* "out.yul":606:618   */
  dup3
    /* "out.yul":597:663   */
  codecopy
    /* "out.yul":687:706   */
  dataSize(sub_0)
    /* "out.yul":673:685   */
  dup2
    /* "out.yul":666:707   */
  return
    /* "out.yul":710:891   */
tag_1:
    /* "out.yul":737:750   */
  0x00
    /* "out.yul":770:777   */
  msize
    /* "out.yul":884:885   */
  0x01
    /* "out.yul":881:882   */
  dup4
    /* "out.yul":877:886   */
  add
    /* "out.yul":871:887   */
  mload
    /* "out.yul":868:869   */
  0x00
    /* "out.yul":864:888   */
  shl
    /* "out.yul":796:862   */
  0xbc36789e7a1e281436464229828f817d6612f7b477d66591ff96a9e064bcc98a
    /* "out.yul":789:889   */
  sstore
    /* "out.yul":751:891   */
  pop
    /* "out.yul":710:891   */
  swap2
  swap1
  pop
  jump	// out
stop

sub_0: assembly {
        /* "out.yul":975:978   */
      0x00
        /* "out.yul":962:979   */
      calldataload
        /* "out.yul":957:960   */
      0xe0
        /* "out.yul":953:980   */
      shr
        /* "out.yul":988:997   */
      dup1
        /* "out.yul":1003:1013   */
      0xea54e440
        /* "out.yul":998:1830   */
      dup2
      eq
      tag_10
      jumpi
        /* "out.yul":1836:1846   */
      0x68aa6be9
        /* "out.yul":1831:2907   */
      dup2
      eq
      tag_11
      jumpi
        /* "out.yul":2913:2923   */
      0xe2179b7f
        /* "out.yul":2908:3741   */
      dup2
      eq
      tag_12
      jumpi
        /* "out.yul":3747:3757   */
      0x0c8f9aa2
        /* "out.yul":3742:4573   */
      dup2
      eq
      tag_13
      jumpi
        /* "out.yul":4594:4595   */
      0x00
        /* "out.yul":4591:4592   */
      dup1
        /* "out.yul":4584:4596   */
      revert
        /* "out.yul":998:1830   */
    tag_10:
        /* "out.yul":1042:1043   */
      0x04
        /* "out.yul":1073:1089   */
      dup1
        /* "out.yul":1112:1113   */
      0x00
        /* "out.yul":1138:1152   */
      tag_14
      tag_2
      jump	// in
    tag_14:
        /* "out.yul":1187:1194   */
      msize
        /* "out.yul":1231:1254   */
      dup1
        /* "out.yul":1283:1306   */
      dup2
        /* "out.yul":1340:1360   */
      dup1
        /* "out.yul":1382:1395   */
      dup5
        /* "out.yul":1376:1396   */
      mload
        /* "out.yul":1373:1374   */
      0x00
        /* "out.yul":1368:1397   */
      byte
        /* "out.yul":1405:1407   */
      0x44
        /* "out.yul":1400:1410   */
      dup2
      eq
      tag_16
      jumpi
        /* "out.yul":1469:1470   */
      0x00
        /* "out.yul":1466:1467   */
      dup1
        /* "out.yul":1459:1471   */
      revert
        /* "out.yul":1400:1410   */
    tag_16:
        /* "out.yul":1361:1475   */
      pop
        /* "out.yul":1513:1514   */
      0x01
        /* "out.yul":1498:1511   */
      dup6
        /* "out.yul":1494:1515   */
      add
        /* "out.yul":1477:1515   */
      swap5
      pop
        /* "out.yul":1559:1572   */
      dup5
        /* "out.yul":1553:1573   */
      mload
        /* "out.yul":1549:1551   */
      0x60
        /* "out.yul":1545:1574   */
      shr
        /* "out.yul":1523:1543   */
      dup3
        /* "out.yul":1516:1575   */
      mstore
        /* "out.yul":1612:1614   */
      0x14
        /* "out.yul":1597:1610   */
      dup6
        /* "out.yul":1593:1615   */
      add
        /* "out.yul":1576:1615   */
      swap5
      pop
        /* "out.yul":1666:1668   */
      0x20
        /* "out.yul":1644:1664   */
      dup3
        /* "out.yul":1640:1669   */
      add
        /* "out.yul":1616:1669   */
      swap2
      pop
        /* "out.yul":1727:1729   */
      0x20
        /* "out.yul":1702:1725   */
      dup5
        /* "out.yul":1698:1730   */
      add
        /* "out.yul":1671:1730   */
      swap4
      pop
        /* "out.yul":1797:1825   */
      dup3
        /* "out.yul":1772:1795   */
      dup5
        /* "out.yul":1768:1826   */
      sub
        /* "out.yul":1738:1766   */
      dup4
        /* "out.yul":1731:1827   */
      return
        /* "out.yul":1831:2907   */
    tag_11:
        /* "out.yul":1875:1876   */
      0x04
        /* "out.yul":1906:1922   */
      dup1
        /* "out.yul":1945:1946   */
      0x00
        /* "out.yul":1960:1974   */
      dup1
        /* "out.yul":2001:2003   */
      0x43
        /* "out.yul":1985:1999   */
      dup3
        /* "out.yul":1977:2004   */
      mstore8
        /* "out.yul":2043:2044   */
      0x01
        /* "out.yul":2027:2041   */
      dup3
        /* "out.yul":2023:2045   */
      add
        /* "out.yul":2005:2045   */
      swap2
      pop
        /* "out.yul":2089:2105   */
      dup4
        /* "out.yul":2076:2106   */
      calldataload
        /* "out.yul":2073:2074   */
      0x00
        /* "out.yul":2069:2107   */
      shl
        /* "out.yul":2053:2067   */
      dup3
        /* "out.yul":2046:2108   */
      mstore
        /* "out.yul":2147:2149   */
      0x20
        /* "out.yul":2131:2145   */
      dup3
        /* "out.yul":2127:2150   */
      add
        /* "out.yul":2109:2150   */
      swap2
      pop
        /* "out.yul":2193:2195   */
      0x20
        /* "out.yul":2175:2191   */
      dup5
        /* "out.yul":2171:2196   */
      add
        /* "out.yul":2151:2196   */
      swap4
      pop
        /* "out.yul":2222:2230   */
      tag_17
        /* "out.yul":2226:2229   */
      dup2
        /* "out.yul":2222:2230   */
      tag_3
      jump	// in
    tag_17:
        /* "out.yul":2265:2272   */
      msize
        /* "out.yul":2309:2332   */
      dup1
        /* "out.yul":2361:2384   */
      dup2
        /* "out.yul":2418:2438   */
      dup1
        /* "out.yul":2460:2473   */
      dup5
        /* "out.yul":2454:2474   */
      mload
        /* "out.yul":2451:2452   */
      0x00
        /* "out.yul":2446:2475   */
      byte
        /* "out.yul":2483:2485   */
      0x43
        /* "out.yul":2478:2488   */
      dup2
      eq
      tag_19
      jumpi
        /* "out.yul":2547:2548   */
      0x00
        /* "out.yul":2544:2545   */
      dup1
        /* "out.yul":2537:2549   */
      revert
        /* "out.yul":2478:2488   */
    tag_19:
        /* "out.yul":2439:2553   */
      pop
        /* "out.yul":2591:2592   */
      0x01
        /* "out.yul":2576:2589   */
      dup6
        /* "out.yul":2572:2593   */
      add
        /* "out.yul":2555:2593   */
      swap5
      pop
        /* "out.yul":2636:2649   */
      dup5
        /* "out.yul":2630:2650   */
      mload
        /* "out.yul":2627:2628   */
      0x00
        /* "out.yul":2623:2651   */
      shr
        /* "out.yul":2601:2621   */
      dup3
        /* "out.yul":2594:2652   */
      mstore
        /* "out.yul":2689:2691   */
      0x20
        /* "out.yul":2674:2687   */
      dup6
        /* "out.yul":2670:2692   */
      add
        /* "out.yul":2653:2692   */
      swap5
      pop
        /* "out.yul":2743:2745   */
      0x20
        /* "out.yul":2721:2741   */
      dup3
        /* "out.yul":2717:2746   */
      add
        /* "out.yul":2693:2746   */
      swap2
      pop
        /* "out.yul":2804:2806   */
      0x20
        /* "out.yul":2779:2802   */
      dup5
        /* "out.yul":2775:2807   */
      add
        /* "out.yul":2748:2807   */
      swap4
      pop
        /* "out.yul":2874:2902   */
      dup3
        /* "out.yul":2849:2872   */
      dup5
        /* "out.yul":2845:2903   */
      sub
        /* "out.yul":2815:2843   */
      dup4
        /* "out.yul":2808:2904   */
      return
        /* "out.yul":2908:3741   */
    tag_12:
        /* "out.yul":2952:2953   */
      0x04
        /* "out.yul":2983:2999   */
      dup1
        /* "out.yul":3022:3023   */
      0x00
        /* "out.yul":3048:3063   */
      tag_20
      tag_4
      jump	// in
    tag_20:
        /* "out.yul":3098:3105   */
      msize
        /* "out.yul":3142:3165   */
      dup1
        /* "out.yul":3194:3217   */
      dup2
        /* "out.yul":3251:3271   */
      dup1
        /* "out.yul":3293:3306   */
      dup5
        /* "out.yul":3287:3307   */
      mload
        /* "out.yul":3284:3285   */
      0x00
        /* "out.yul":3279:3308   */
      byte
        /* "out.yul":3316:3318   */
      0x44
        /* "out.yul":3311:3321   */
      dup2
      eq
      tag_22
      jumpi
        /* "out.yul":3380:3381   */
      0x00
        /* "out.yul":3377:3378   */
      dup1
        /* "out.yul":3370:3382   */
      revert
        /* "out.yul":3311:3321   */
    tag_22:
        /* "out.yul":3272:3386   */
      pop
        /* "out.yul":3424:3425   */
      0x01
        /* "out.yul":3409:3422   */
      dup6
        /* "out.yul":3405:3426   */
      add
        /* "out.yul":3388:3426   */
      swap5
      pop
        /* "out.yul":3470:3483   */
      dup5
        /* "out.yul":3464:3484   */
      mload
        /* "out.yul":3460:3462   */
      0x60
        /* "out.yul":3456:3485   */
      shr
        /* "out.yul":3434:3454   */
      dup3
        /* "out.yul":3427:3486   */
      mstore
        /* "out.yul":3523:3525   */
      0x14
        /* "out.yul":3508:3521   */
      dup6
        /* "out.yul":3504:3526   */
      add
        /* "out.yul":3487:3526   */
      swap5
      pop
        /* "out.yul":3577:3579   */
      0x20
        /* "out.yul":3555:3575   */
      dup3
        /* "out.yul":3551:3580   */
      add
        /* "out.yul":3527:3580   */
      swap2
      pop
        /* "out.yul":3638:3640   */
      0x20
        /* "out.yul":3613:3636   */
      dup5
        /* "out.yul":3609:3641   */
      add
        /* "out.yul":3582:3641   */
      swap4
      pop
        /* "out.yul":3708:3736   */
      dup3
        /* "out.yul":3683:3706   */
      dup5
        /* "out.yul":3679:3737   */
      sub
        /* "out.yul":3649:3677   */
      dup4
        /* "out.yul":3642:3738   */
      return
        /* "out.yul":3742:4573   */
    tag_13:
        /* "out.yul":3786:3787   */
      0x04
        /* "out.yul":3817:3833   */
      dup1
        /* "out.yul":3856:3857   */
      0x00
        /* "out.yul":3882:3896   */
      tag_23
      tag_5
      jump	// in
    tag_23:
        /* "out.yul":3931:3938   */
      msize
        /* "out.yul":3975:3998   */
      dup1
        /* "out.yul":4027:4050   */
      dup2
        /* "out.yul":4084:4104   */
      dup1
        /* "out.yul":4126:4139   */
      dup5
        /* "out.yul":4120:4140   */
      mload
        /* "out.yul":4117:4118   */
      0x00
        /* "out.yul":4112:4141   */
      byte
        /* "out.yul":4149:4151   */
      0x43
        /* "out.yul":4144:4154   */
      dup2
      eq
      tag_25
      jumpi
        /* "out.yul":4213:4214   */
      0x00
        /* "out.yul":4210:4211   */
      dup1
        /* "out.yul":4203:4215   */
      revert
        /* "out.yul":4144:4154   */
    tag_25:
        /* "out.yul":4105:4219   */
      pop
        /* "out.yul":4257:4258   */
      0x01
        /* "out.yul":4242:4255   */
      dup6
        /* "out.yul":4238:4259   */
      add
        /* "out.yul":4221:4259   */
      swap5
      pop
        /* "out.yul":4302:4315   */
      dup5
        /* "out.yul":4296:4316   */
      mload
        /* "out.yul":4293:4294   */
      0x00
        /* "out.yul":4289:4317   */
      shr
        /* "out.yul":4267:4287   */
      dup3
        /* "out.yul":4260:4318   */
      mstore
        /* "out.yul":4355:4357   */
      0x20
        /* "out.yul":4340:4353   */
      dup6
        /* "out.yul":4336:4358   */
      add
        /* "out.yul":4319:4358   */
      swap5
      pop
        /* "out.yul":4409:4411   */
      0x20
        /* "out.yul":4387:4407   */
      dup3
        /* "out.yul":4383:4412   */
      add
        /* "out.yul":4359:4412   */
      swap2
      pop
        /* "out.yul":4470:4472   */
      0x20
        /* "out.yul":4445:4468   */
      dup5
        /* "out.yul":4441:4473   */
      add
        /* "out.yul":4414:4473   */
      swap4
      pop
        /* "out.yul":4540:4568   */
      dup3
        /* "out.yul":4515:4538   */
      dup5
        /* "out.yul":4511:4569   */
      sub
        /* "out.yul":4481:4509   */
      dup4
        /* "out.yul":4474:4570   */
      return
        /* "out.yul":4788:5062   */
    tag_2:
        /* "out.yul":4815:4828   */
      0x00
        /* "out.yul":4848:4855   */
      msize
        /* "out.yul":4878:4885   */
      dup1
        /* "out.yul":4903:4905   */
      0x44
        /* "out.yul":4894:4901   */
      dup3
        /* "out.yul":4886:4906   */
      mstore8
        /* "out.yul":4931:4932   */
      0x01
        /* "out.yul":4922:4929   */
      dup3
        /* "out.yul":4918:4933   */
      add
        /* "out.yul":4907:4933   */
      swap2
      pop
        /* "out.yul":4958:5000   */
      0x8a258309b8177df36c48de82885a56ccf576979c
        /* "out.yul":4954:4956   */
      0x60
        /* "out.yul":4950:5001   */
      shl
        /* "out.yul":4941:4948   */
      dup3
        /* "out.yul":4934:5002   */
      mstore
        /* "out.yul":5027:5029   */
      0x14
        /* "out.yul":5018:5025   */
      dup3
        /* "out.yul":5014:5030   */
      add
        /* "out.yul":5003:5030   */
      swap2
      pop
        /* "out.yul":5051:5060   */
      dup1
        /* "out.yul":5034:5060   */
      swap3
      pop
        /* "out.yul":4829:5062   */
      pop
      pop
        /* "out.yul":4788:5062   */
      swap1
      jump	// out
        /* "out.yul":5063:5333   */
    tag_3:
        /* "out.yul":5084:5097   */
      0x00
        /* "out.yul":5117:5124   */
      msize
        /* "out.yul":5143:5150   */
      dup1
        /* "out.yul":5168:5170   */
      0x43
        /* "out.yul":5159:5166   */
      dup3
        /* "out.yul":5151:5171   */
      mstore8
        /* "out.yul":5196:5197   */
      0x01
        /* "out.yul":5187:5194   */
      dup3
        /* "out.yul":5183:5198   */
      add
        /* "out.yul":5172:5198   */
      swap2
      pop
        /* "out.yul":5222:5224   */
      0x0a
        /* "out.yul":5219:5220   */
      0x00
        /* "out.yul":5215:5225   */
      shl
        /* "out.yul":5206:5213   */
      dup3
        /* "out.yul":5199:5226   */
      mstore
        /* "out.yul":5251:5253   */
      0x20
        /* "out.yul":5242:5249   */
      dup3
        /* "out.yul":5238:5254   */
      add
        /* "out.yul":5227:5254   */
      swap2
      pop
        /* "out.yul":5270:5286   */
      tag_30
        /* "out.yul":5282:5285   */
      dup5
        /* "out.yul":5275:5280   */
      dup3
        /* "out.yul":5270:5286   */
      tag_6
      jump	// in
    tag_30:
        /* "out.yul":5298:5305   */
      msize
        /* "out.yul":5287:5305   */
      swap3
      pop
        /* "out.yul":5326:5331   */
      dup1
        /* "out.yul":5309:5331   */
      swap4
      pop
        /* "out.yul":5098:5333   */
      pop
      pop
      pop
        /* "out.yul":5063:5333   */
      swap2
      swap1
      pop
      jump	// out
        /* "out.yul":5334:5579   */
    tag_4:
        /* "out.yul":5362:5375   */
      0x00
        /* "out.yul":5395:5402   */
      msize
        /* "out.yul":5427:5434   */
      dup1
        /* "out.yul":5452:5454   */
      0x44
        /* "out.yul":5443:5450   */
      dup3
        /* "out.yul":5435:5455   */
      mstore8
        /* "out.yul":5480:5481   */
      0x01
        /* "out.yul":5471:5478   */
      dup3
        /* "out.yul":5467:5482   */
      add
        /* "out.yul":5456:5482   */
      swap2
      pop
        /* "out.yul":5507:5515   */
      origin
        /* "out.yul":5503:5505   */
      0x60
        /* "out.yul":5499:5516   */
      shl
        /* "out.yul":5490:5497   */
      dup3
        /* "out.yul":5483:5517   */
      mstore
        /* "out.yul":5542:5544   */
      0x14
        /* "out.yul":5533:5540   */
      dup3
        /* "out.yul":5529:5545   */
      add
        /* "out.yul":5518:5545   */
      swap2
      pop
        /* "out.yul":5566:5577   */
      dup1
        /* "out.yul":5549:5577   */
      swap3
      pop
        /* "out.yul":5376:5579   */
      pop
      pop
        /* "out.yul":5334:5579   */
      swap1
      jump	// out
        /* "out.yul":5580:5908   */
    tag_5:
        /* "out.yul":5607:5620   */
      0x00
        /* "out.yul":5640:5647   */
      msize
        /* "out.yul":5678:5685   */
      dup1
        /* "out.yul":5703:5705   */
      0x43
        /* "out.yul":5694:5701   */
      dup3
        /* "out.yul":5686:5706   */
      mstore8
        /* "out.yul":5744:5810   */
      0xbc36789e7a1e281436464229828f817d6612f7b477d66591ff96a9e064bcc98a
        /* "out.yul":5738:5811   */
      sload
        /* "out.yul":5735:5736   */
      0x00
        /* "out.yul":5731:5812   */
      shr
        /* "out.yul":5721:5728   */
      dup3
        /* "out.yul":5718:5719   */
      0x01
        /* "out.yul":5714:5729   */
      add
        /* "out.yul":5707:5813   */
      mstore
        /* "out.yul":5867:5869   */
      0x21
        /* "out.yul":5858:5865   */
      dup3
        /* "out.yul":5854:5870   */
      add
        /* "out.yul":5843:5870   */
      swap2
      pop
        /* "out.yul":5891:5906   */
      dup1
        /* "out.yul":5874:5906   */
      swap3
      pop
        /* "out.yul":5621:5908   */
      pop
      pop
        /* "out.yul":5580:5908   */
      swap1
      jump	// out
        /* "out.yul":5909:6262   */
    tag_6:
        /* "out.yul":5932:5945   */
      0x00
        /* "out.yul":5969:5985   */
      tag_34
        /* "out.yul":5983:5984   */
      dup3
        /* "out.yul":5969:5985   */
      tag_7
      jump	// in
    tag_34:
        /* "out.yul":6007:6023   */
      tag_35
        /* "out.yul":6021:6022   */
      dup6
        /* "out.yul":6007:6023   */
      tag_7
      jump	// in
    tag_35:
        /* "out.yul":6040:6042   */
      dup2
        /* "out.yul":6036:6038   */
      dup5
        /* "out.yul":6032:6043   */
      add
        /* "out.yul":6026:6043   */
      swap2
      pop
        /* "out.yul":6055:6062   */
      dup3
        /* "out.yul":6080:6087   */
      dup4
        /* "out.yul":6071:6078   */
      dup3
        /* "out.yul":6068:6088   */
      gt
        /* "out.yul":6065:6111   */
      iszero
      tag_36
      jumpi
        /* "out.yul":6100:6107   */
      dup2
        /* "out.yul":6095:6107   */
      swap1
      pop
        /* "out.yul":6065:6111   */
    tag_36:
        /* "out.yul":6129:6136   */
      msize
        /* "out.yul":6156:6157   */
      dup2
        /* "out.yul":6147:6154   */
      dup2
        /* "out.yul":6139:6158   */
      mstore8
        /* "out.yul":6229:6231   */
      dup4
        /* "out.yul":6204:6225   */
      tag_37
        /* "out.yul":6223:6224   */
      dup4
        /* "out.yul":6204:6225   */
      tag_8
      jump	// in
    tag_37:
        /* "out.yul":6200:6202   */
      0x20
        /* "out.yul":6196:6226   */
      sub
        /* "out.yul":6193:6194   */
      0x08
        /* "out.yul":6189:6227   */
      mul
        /* "out.yul":6185:6232   */
      shl
        /* "out.yul":6181:6182   */
      0x01
        /* "out.yul":6172:6179   */
      dup3
        /* "out.yul":6168:6183   */
      add
        /* "out.yul":6161:6233   */
      mstore
        /* "out.yul":6253:6260   */
      dup1
        /* "out.yul":6236:6260   */
      swap7
      pop
        /* "out.yul":5946:6262   */
      pop
      pop
      pop
      pop
      pop
      pop
        /* "out.yul":5909:6262   */
      swap3
      swap2
      pop
      pop
      jump	// out
        /* "out.yul":6266:6484   */
    tag_7:
        /* "out.yul":6297:6309   */
      0x00
        /* "out.yul":6311:6315   */
      dup1
        /* "out.yul":6344:6347   */
      dup3
        /* "out.yul":6338:6348   */
      mload
        /* "out.yul":6335:6336   */
      0x00
        /* "out.yul":6330:6349   */
      byte
        /* "out.yul":6322:6349   */
      swap1
      pop
        /* "out.yul":6382:6383   */
      0x01
        /* "out.yul":6377:6380   */
      dup4
        /* "out.yul":6373:6384   */
      add
        /* "out.yul":6367:6385   */
      mload
        /* "out.yul":6402:6426   */
      tag_39
        /* "out.yul":6421:6425   */
      dup3
        /* "out.yul":6402:6426   */
      tag_8
      jump	// in
    tag_39:
        /* "out.yul":6474:6479   */
      dup2
        /* "out.yul":6470:6471   */
      0x08
        /* "out.yul":6463:6467   */
      dup3
        /* "out.yul":6459:6461   */
      0x20
        /* "out.yul":6455:6468   */
      sub
        /* "out.yul":6451:6472   */
      mul
        /* "out.yul":6447:6480   */
      shl
        /* "out.yul":6431:6480   */
      swap4
      pop
        /* "out.yul":6316:6484   */
      pop
      pop
        /* "out.yul":6266:6484   */
      swap2
      pop
      swap2
      jump	// out
        /* "out.yul":6486:6877   */
    tag_8:
        /* "out.yul":6523:6527   */
      0x00
        /* "out.yul":6539:6543   */
      dup2
        /* "out.yul":6551:6552   */
      0x01
        /* "out.yul":6546:6565   */
      dup2
      eq
      tag_42
      jumpi
        /* "out.yul":6573:6574   */
      0x02
        /* "out.yul":6568:6586   */
      dup2
      eq
      tag_43
      jumpi
        /* "out.yul":6594:6595   */
      0x03
        /* "out.yul":6589:6608   */
      dup2
      eq
      tag_44
      jumpi
        /* "out.yul":6616:6618   */
      0x44
        /* "out.yul":6611:6631   */
      dup2
      eq
      tag_45
      jumpi
        /* "out.yul":6639:6642   */
      0x66
        /* "out.yul":6634:6655   */
      dup2
      eq
      tag_46
      jumpi
        /* "out.yul":6684:6686   */
      0x24
        /* "out.yul":6678:6682   */
      dup4
        /* "out.yul":6675:6687   */
      lt
        /* "out.yul":6672:6734   */
      iszero
      tag_47
      jumpi
        /* "out.yul":6714:6715   */
      0x03
        /* "out.yul":6708:6712   */
      dup4
        /* "out.yul":6704:6716   */
      sub
        /* "out.yul":6696:6716   */
      swap2
      pop
        /* "out.yul":6723:6728   */
      pop
      jump(tag_40)
        /* "out.yul":6672:6734   */
    tag_47:
        /* "out.yul":6751:6753   */
      0x44
        /* "out.yul":6745:6749   */
      dup4
        /* "out.yul":6742:6754   */
      lt
        /* "out.yul":6739:6802   */
      iszero
      tag_48
      jumpi
        /* "out.yul":6781:6783   */
      0x23
        /* "out.yul":6775:6779   */
      dup4
        /* "out.yul":6771:6784   */
      sub
        /* "out.yul":6763:6784   */
      swap2
      pop
        /* "out.yul":6791:6796   */
      pop
      jump(tag_40)
        /* "out.yul":6739:6802   */
    tag_48:
        /* "out.yul":6819:6822   */
      0x66
        /* "out.yul":6813:6817   */
      dup4
        /* "out.yul":6810:6823   */
      lt
        /* "out.yul":6807:6871   */
      iszero
      tag_49
      jumpi
        /* "out.yul":6850:6852   */
      0x45
        /* "out.yul":6844:6848   */
      dup4
        /* "out.yul":6840:6853   */
      sub
        /* "out.yul":6832:6853   */
      swap2
      pop
        /* "out.yul":6860:6865   */
      pop
      jump(tag_40)
        /* "out.yul":6807:6871   */
    tag_49:
        /* "out.yul":6532:6875   */
      jump(tag_41)
        /* "out.yul":6546:6565   */
    tag_42:
        /* "out.yul":6562:6564   */
      0x20
        /* "out.yul":6554:6564   */
      swap2
      pop
        /* "out.yul":6546:6565   */
      jump(tag_41)
        /* "out.yul":6568:6586   */
    tag_43:
        /* "out.yul":6584:6585   */
      0x01
        /* "out.yul":6576:6585   */
      swap2
      pop
        /* "out.yul":6568:6586   */
      jump(tag_41)
        /* "out.yul":6589:6608   */
    tag_44:
        /* "out.yul":6605:6607   */
      0x20
        /* "out.yul":6597:6607   */
      swap2
      pop
        /* "out.yul":6589:6608   */
      jump(tag_41)
        /* "out.yul":6611:6631   */
    tag_45:
        /* "out.yul":6628:6630   */
      0x14
        /* "out.yul":6620:6630   */
      swap2
      pop
        /* "out.yul":6611:6631   */
      jump(tag_41)
        /* "out.yul":6634:6655   */
    tag_46:
        /* "out.yul":6652:6654   */
      0x20
        /* "out.yul":6644:6654   */
      swap2
      pop
        /* "out.yul":6532:6875   */
    tag_41:
      pop
        /* "out.yul":6486:6877   */
    tag_40:
      swap2
      swap1
      pop
      jump	// out
}

